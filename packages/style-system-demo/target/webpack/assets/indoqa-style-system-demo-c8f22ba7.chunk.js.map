{"version":3,"sources":["webpack:///../style-system/src/main/components/base.ts","webpack:///../style-system/src/main/components/Box.tsx","webpack:///../style-system/src/main/components/Flex.tsx","webpack:///../style-system/src/main/components/Text.tsx","webpack:///../style-system/src/main/components/grid/GridContext.ts","webpack:///../style-system/src/main/components/grid/testGridContext.tsx","webpack:///../style-system/src/main/components/grid/utils.ts","webpack:///../style-system/src/main/components/grid/Col.tsx","webpack:///../style-system/src/main/components/grid/ColRow.tsx","webpack:///../style-system/src/main/components/grid/Grid.tsx","webpack:///../style-system/src/main/components/grid/Row.tsx","webpack:///../style-system/src/main/components/grid/Panel.tsx","webpack:///../style-system/src/main/fela/IndoqaFela.tsx","webpack:///../style-system/src/main/fela/createRenderer.ts","webpack:///../style-system/src/main/theming/baseTheme.ts","webpack:///./src/main/grid/GridSamples.tsx","webpack:///./src/main/style-guide/sgtheme/sgThemes.ts","webpack:///./src/main/style-guide/sgtheme/SGThemeContext.ts","webpack:///./src/main/style-guide/sgtheme/withSGTheme.tsx","webpack:///./src/main/style-guide/colors/ColorPanel.tsx","webpack:///./src/main/style-guide/colors/SmallColorPanel.tsx","webpack:///./src/main/style-guide/colors/ColorsPanel.tsx","webpack:///./src/main/style-guide/ContentHeader.tsx","webpack:///./src/main/style-guide/ContentPanel.tsx","webpack:///./src/main/style-guide/Heading.tsx","webpack:///./src/main/style-guide/menu/Logo.tsx","webpack:///./src/main/style-guide/menu/MenuGroup.tsx","webpack:///./src/main/style-guide/menu/MenuHeader.tsx","webpack:///./src/main/style-guide/menu/MenuItem.tsx","webpack:///./src/main/style-guide/menu/StyleGuideMenu.tsx","webpack:///./src/main/style-guide/typography/TextSample.tsx","webpack:///./src/main/style-guide/typography/TextSpecimen.tsx","webpack:///./src/main/style-guide/typography/FontMixContent.tsx","webpack:///./src/main/style-guide/overview/OverviewPanel.tsx","webpack:///./src/main/style-guide/typography/FontStylePanel.tsx","webpack:///./src/main/style-guide/typography/FontMixPanel.tsx","webpack:///./src/main/style-guide/typography/HeadlineFontPanel.tsx","webpack:///./src/main/style-guide/typography/TextFontPanel.tsx","webpack:///./src/main/style-guide/typography/TypographyPanel.tsx","webpack:///./src/main/style-guide/utils/importCss.ts","webpack:///./src/main/style-guide/StyleGuide.tsx","webpack:///./src/main/style-guide/DemoStyleGuide.tsx","webpack:///./src/main/app/fela.ts","webpack:///../style-system/src/main/theming/buildTheme.ts","webpack:///./src/main/app/history.ts","webpack:///./src/main/app/theme.ts","webpack:///./src/main/app/App.tsx","webpack:///../style-system/src/main/css/renderResetCss.ts","webpack:///../style-system/src/main/css/renderRebootCss.ts","webpack:///./src/main/index.tsx"],"names":["THEME_NOT_AVAILABLE_ERR_MSG","createBoxModelCSSProps","_a","inline","width","height","display","fullWidth","fullHeight","createFlexChildCSSProps","grow","shrink","basis","order","align","styles","flexGrow","flexShrink","flexBasis","Object","assign","alignSelf","createFontCSSProps","theme","font","fontSize","color","bold","ellipsis","undefined","fonts","fontSizes","colors","Error","fontFamily","text","fontWeight","textOverflow","overflow","whiteSpace","createMarginCSSProps","m","mt","mb","ml","mr","mx","my","margin","base_spacing","marginLeft","marginRight","marginTop","marginBottom","createPaddingCSSProps","p","pt","pb","pl","pr","px","py","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","createStylingCSSProps","bg","backgroundColor","knownProps","filterProps","props","keys","filter","key","includes","reduce","obj","mergeThemedStyles","componentStyle","passedStyle","Array","concat","propValue","spacing","space1","space2","space3","space4","space0","createBoxCSSStyles","tslib_es6","themedBoxStyles","Box_Box","_super","Box","prototype","render","this","children","style","rest","react","es","className","center","stretch","value","createFlexContainerCSSStyle","_b","direction","nowrap","justifyContent","alignItems","flexDirection","flexWrap","themedFlexStyles","Flex_Flex","Flex","themedTextStyle","GridContext","Text","testGridContext","child","addUnitIfNeeded","propertyUnit","valueType","isNaN","Col_Col","Col","internalProps","rowBreak","size","effectiveSize","colStyle","spacingWithUnit","Consumer","defaultProps","ColRow_RowContainer","RowContainer","otherProps","boxSizing",":first-child","ColRow_ColRow","ColRow","renderChildren","currentRowSize","rowsCount","map","currentChild","_this","Grid_GridContainer","GridContainer","maxWidth","Grid_Grid","Grid","Provider","Row_RowContainer","minHeight","@media (min-width: 768px)","Row_Row","Row","isDefaultWidth","Panel_PanelContainer","PanelContainer","flex",":not(:last-child)","Panel_Panel","Panel","IndoqaFela_IndoqaFela","IndoqaFela","react_default","a","createElement","renderer","Component","DEFAULT_CONFIG","plugins","typeScale","level","baseTheme","big","veryBig","small","verySmall","layout","GridSamples","innerBox","innerBox2","lightTheme","primaryDark","primary","primaryLight","background","textInverted","fontFamilyCSSImports","fontStyles","base","lineHeight","headline","topMenuHeight","colorPanelBorder","SGThemeContext","withSGTheme","sgTheme","colors_ColorPanel","name","textColor","bigint","parseInt","startsWith","substr","calcTextColor","minWidth","textAlign","textTransform","borderRadius","border","SmallColorPanel","ColorsPanel","hexCode","colors_ColorsPanel","style_guide_ContentHeader","style_guide_ContentPanel","style_guide_Heading","as","baseStyle","getConcreteStyle","menu_Logo","to","Link","listStyle","> a","textDecoration","List","menu_MenuGroup","menu_MenuHeader","menu_MenuItem","> a:visited","> a.active","NavLink","menu_StyleGuideMenu","tablet","overflowY","borderBottom","typography_TextSample","headerText","longText","shortText","characters","longTextInlineStyle","href","Container","typography_FontMixContent","textFont","headlineFont","textFontSize","extendedHeadline1Font","length","extendedHeadline2Font","extendedHeadline3Font","extendedTextFont","overview_OverviewPanel","fontMixes","panelStyle","Header","FontStylePanel_Container","Content","typography_FontStylePanel","typography_FontMixPanel","fontMix","HeadlineSample","typography_HeadlineFontPanel","typography_TextFontPanel","typography_TypographyPanel","textFonts","headlineFonts","fontStyle","utils_importCss","id","url","document","getElementById","styleNode","head","appendChild","append","InnerContentPanel","style_guide_StyleGuide","StyleGuide","call","state","getDescription","projectName","description","componentDidMount","title","groups","mountPath","logo","menuGroups","componentDescription","menuItems","descriptions","componentMountPath","toLowerCase","routes","forEach","component","push","es_Route","exact","path","DemoStyleGuide_DemoStyleGuide","DemoStyleGuide","accent","textSecondary","divider","extraBig","grid_GridSamples","style_guide_DemoStyleGuide","fela_plugin_named_keys_es","desktop","customTheme","init","_c","config","_d","resetCss","fela","fela_plugin_extend_es","fela_plugin_prefixer_es","fela_plugin_fallback_value_es","fela_plugin_unit_es","enhancers","app_history","createBrowserHistory_default","systemFonts","baseFontFamilies","baseColors","baseFontSizes","app_theme","actionBarHeight","menuWidth","dist_es","App_renderer","fela_es","renderStatic","baseCssProps","h1","h2","h3","links","hover","active","visited","app_App","App","rebootCss","listStylePosition","listStyleType","renderRebootCss","Router","history","Switch","Route","rootEl","react_dom"],"mappings":"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","file":"indoqa-style-system-demo-c8f22ba7.chunk.js","sourcesContent":["import {IStyle} from 'fela'\nimport {FelaStyle, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '..'\n\nexport interface BoxModelProps {\n  inline?: boolean,\n  width?: number | string,\n  height?: number | string,\n  fullWidth?: boolean,\n  fullHeight?: boolean,\n}\n\nexport interface BoxProps extends MarginProps,\n  PaddingProps,\n  FlexChildProps,\n  FontProps,\n  StylingProps,\n  BoxModelProps {\n}\n\ntype Direction = 'column' | 'row'\n\nexport interface FlexChildProps {\n  grow?: number,\n  shrink?: number,\n  basis?: number | string,\n  order?: number,\n  align?: string,\n}\n\nexport interface FlexContainerProps {\n  inline?: boolean,\n  direction?: Direction,\n  nowrap?: boolean,\n  center?: string,\n  justifyContent?: string,\n  alignItems?: string,\n  stretch?: boolean,\n}\n\nexport interface FlexProps extends BoxProps, FlexContainerProps {\n}\n\nexport interface FontProps {\n  font?: string,\n  fontSize?: number | string,\n  color?: string,\n  bold?: boolean,\n  ellipsis?: boolean,\n}\n\nexport interface MarginProps {\n  m?: number,\n  mt?: number,\n  mb?: number,\n  ml?: number,\n  mr?: number,\n  mx?: number,\n  my?: number,\n}\n\nexport declare interface PaddingProps {\n  p?: number,\n  pt?: number,\n  pb?: number,\n  pl?: number,\n  pr?: number,\n  px?: number,\n  py?: number,\n}\n\nexport interface StylingProps {\n  bg?: string,\n}\n\nexport interface TextProps extends MarginProps, PaddingProps, FlexChildProps, FontProps {\n}\n\ninterface WithBaseTheme {\n  theme?: BaseTheme,\n}\n\nexport interface WithStyle<T extends BaseTheme> {\n  style?: FelaStyle<T>,\n}\n\nconst THEME_NOT_AVAILABLE_ERR_MSG = 'There is no theme available or one of its properties is missing. ' +\n  'Check if the Fela ThemeProvider is configured correctly.'\n\nexport const createBoxModelCSSProps = ({inline, width, height, fullWidth, fullHeight}: BoxModelProps) => ({\n  display: (inline) ? 'inline' : 'block',\n  width: (fullWidth) ? '100%' : width || 'auto',\n  height: (fullHeight) ? '100%' : height || 'auto',\n})\n\nexport const createFlexChildCSSProps = ({grow, shrink, basis, order, align}: FlexChildProps): IStyle => {\n  const styles = {\n    flexGrow: grow || 0,\n    flexShrink: shrink || 1,\n    flexBasis: basis || 'auto',\n  }\n  if (order) {\n    Object.assign(styles, {order})\n  }\n  if (align) {\n    Object.assign(styles, {alignSelf: align})\n  }\n  return styles\n}\n\nexport const createFontCSSProps = ({theme, font, fontSize, color, bold, ellipsis}: FontProps & WithBaseTheme): IStyle => {\n  if (theme === undefined || theme.fonts === undefined || theme.fontSizes === undefined || theme.colors === undefined) {\n    throw Error(THEME_NOT_AVAILABLE_ERR_MSG)\n  }\n  const styles: IStyle = {\n    fontFamily: (font) ? theme.fonts[font] : theme.fonts.text,\n    fontSize: (fontSize) ? theme.fontSizes[fontSize] : theme.fontSizes.text,\n    color: (color) ? theme.colors[color] : theme.colors.text,\n    fontWeight: (bold) ? 700 : 400,\n  }\n  if (ellipsis) {\n    const ellipsisStyles: IStyle = {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n    }\n    Object.assign(styles, ellipsisStyles)\n  }\n  return styles\n}\n\nexport const createMarginCSSProps = ({theme, m, mt, mb, ml, mr, mx, my}: MarginProps & WithBaseTheme) => {\n  if (theme === undefined) {\n    throw Error(THEME_NOT_AVAILABLE_ERR_MSG)\n  }\n  const styles = {}\n  if (m) {\n    Object.assign(styles, {margin: spacing(theme, m)})\n  }\n  if (mx) {\n    Object.assign(styles, {marginLeft: spacing(theme, mx)})\n    Object.assign(styles, {marginRight: spacing(theme, mx)})\n  }\n  if (my) {\n    Object.assign(styles, {marginTop: spacing(theme, my)})\n    Object.assign(styles, {marginBottom: spacing(theme, my)})\n  }\n  if (mt) {\n    Object.assign(styles, {marginTop: spacing(theme, mt)})\n  }\n  if (mb) {\n    Object.assign(styles, {marginBottom: spacing(theme, mb)})\n  }\n  if (ml) {\n    Object.assign(styles, {marginLeft: spacing(theme, ml)})\n  }\n  if (mr) {\n    Object.assign(styles, {marginRight: spacing(theme, mr)})\n  }\n  return styles\n}\n\nexport const createPaddingCSSProps = ({theme, p, pt, pb, pl, pr, px, py}: PaddingProps & WithBaseTheme) => {\n  if (theme === undefined) {\n    throw Error(THEME_NOT_AVAILABLE_ERR_MSG)\n  }\n  const styles = {}\n  if (p) {\n    Object.assign(styles, {padding: spacing(theme, p)})\n  }\n  if (px) {\n    Object.assign(styles, {paddingLeft: spacing(theme, px)})\n    Object.assign(styles, {paddingRight: spacing(theme, px)})\n  }\n  if (py) {\n    Object.assign(styles, {paddingTop: spacing(theme, py)})\n    Object.assign(styles, {paddingBottom: spacing(theme, py)})\n  }\n  if (pt) {\n    Object.assign(styles, {paddingTop: spacing(theme, pt)})\n  }\n  if (pb) {\n    Object.assign(styles, {paddingBottom: spacing(theme, pb)})\n  }\n  if (pl) {\n    Object.assign(styles, {paddingLeft: spacing(theme, pl)})\n  }\n  if (pr) {\n    Object.assign(styles, {paddingRight: spacing(theme, pr)})\n  }\n  return styles\n}\n\nexport const createStylingCSSProps = ({theme, bg}: StylingProps & WithBaseTheme) => {\n  if (theme === undefined || theme.colors === undefined) {\n    throw Error(THEME_NOT_AVAILABLE_ERR_MSG)\n  }\n\n  if (bg === undefined) {\n    return {}\n  }\n\n  if (bg in theme.colors) {\n    return ({\n      backgroundColor: (bg) ? theme.colors[bg] : 'transparent',\n    })\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(`The bg color ${bg} is not available in theme.colors.`)\n  }\n  return {}\n}\n\nconst knownProps = [\n  'inline', 'width', 'height', 'fullWidth', 'fullHeight',\n  'grow', 'shrink', 'basis', 'order', 'align',\n  'direction', 'nowrap', 'center', 'justifyContent', 'alignItems', 'stretch',\n  'font', 'fontSize', 'color', 'bold', 'ellipsis',\n  'm', 'mt', 'mb', 'ml', 'mr', 'mx', 'my',\n  'p', 'pt', 'pb', 'pl', 'pr', 'px', 'py',\n  'bg',\n  'theme',\n]\n\nexport function filterProps<T>(props: any): any {\n  return Object\n    .keys(props)\n    .filter((key) => !knownProps.includes(key))\n    .reduce((obj, key) => {\n      obj[key] = props[key]\n      return obj\n    }, {})\n}\n\nexport function mergeThemedStyles<T extends BaseTheme, P>(\n  componentStyle: StyleFunction<T, P> | IStyle, passedStyle?: FelaStyle<T, P>): FelaStyle<T, P> {\n\n  if (!passedStyle) {\n    return componentStyle\n  }\n\n  if (passedStyle instanceof Array) {\n    return [componentStyle, ...passedStyle]\n  }\n\n  return [componentStyle, passedStyle]\n}\n\nconst spacing = (theme: BaseTheme, propValue: number) => {\n  if (!propValue) {\n    throw new Error('A spacing value must not be null.')\n  }\n  if (theme === undefined || theme.spacing === undefined) {\n    throw Error(THEME_NOT_AVAILABLE_ERR_MSG)\n  }\n\n  switch (propValue) {\n    case 1:\n      return theme.spacing.space1\n    case 2:\n      return theme.spacing.space2\n    case 3:\n      return theme.spacing.space3\n    case 4:\n      return theme.spacing.space4\n    default:\n      return theme.spacing.space0\n  }\n}\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\n\nimport {BaseTheme} from '..'\nimport {\n  BoxProps,\n  createBoxModelCSSProps,\n  createFlexChildCSSProps,\n  createFontCSSProps,\n  createMarginCSSProps,\n  createPaddingCSSProps,\n  createStylingCSSProps,\n  filterProps,\n  mergeThemedStyles,\n  WithStyle,\n} from './base'\n\nexport const createBoxCSSStyles = (props: BoxProps): IStyle => ({\n  ...createBoxModelCSSProps(props),\n  ...createMarginCSSProps(props),\n  ...createPaddingCSSProps(props),\n  ...createFlexChildCSSProps(props),\n  ...createStylingCSSProps(props),\n  ...createFontCSSProps(props),\n})\n\nconst themedBoxStyles: StyleFunction<BaseTheme, BoxProps> = (props: BoxProps): IStyle => ({\n  ...createBoxCSSStyles(props),\n})\n\nexport class Box<T extends BaseTheme> extends React.Component<BoxProps & WithStyle<T> & React.HTMLAttributes<HTMLDivElement>> {\n\n  public render() {\n    const {children, style, ...rest} = this.props\n    const styles = mergeThemedStyles<T, BoxProps>(themedBoxStyles, style)\n    return (\n      <FelaComponent<T, BoxProps> style={styles} {...rest}>\n        {({className}) => (\n          <div className={className} {...filterProps(rest)}>\n            {children}\n          </div>\n        )}\n      </FelaComponent>\n    )\n  }\n}\n\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\n\nimport {BaseTheme} from '..'\nimport {BoxProps, filterProps, FlexContainerProps, FlexProps, mergeThemedStyles, WithStyle} from './base'\nimport {createBoxCSSStyles} from './Box'\n\nconst align = (center: string | undefined, stretch: boolean | undefined, value: string | undefined) => {\n  if (center) {\n    return 'center'\n  }\n\n  if (value) {\n    return value\n  }\n\n  return (stretch) ? 'stretch' : 'flex-start'\n}\n\nexport const createFlexContainerCSSStyle = (\n  {\n    inline,\n    direction = 'row',\n    nowrap,\n    center,\n    justifyContent,\n    alignItems,\n    stretch,\n  }: FlexContainerProps): IStyle => ({\n  display: (inline) ? 'inline-flex' : 'flex',\n  flexDirection: direction,\n  flexWrap: (nowrap) ? 'nowrap' : 'wrap',\n  justifyContent: align(center, stretch, justifyContent),\n  alignItems: align(center, stretch, alignItems),\n})\n\nconst themedFlexStyles: StyleFunction<BaseTheme, FlexProps> = (props: FlexProps): IStyle => ({\n  ...createBoxCSSStyles(props),\n  ...createFlexContainerCSSStyle(props),\n})\n\nexport class Flex<T extends BaseTheme> extends React.Component<FlexProps & WithStyle<T> & React.HTMLAttributes<HTMLDivElement>> {\n\n  public render() {\n    const {children, style, ...rest} = this.props\n    const styles = mergeThemedStyles<T, BoxProps>(themedFlexStyles, style)\n    return (\n      <FelaComponent<T, FlexProps> style={styles} {...rest}>\n        {({className}) => (\n          <div className={className} {...filterProps(rest)}>\n            {children}\n          </div>\n        )}\n      </FelaComponent>\n    )\n  }\n}\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '..'\nimport {\n  BoxProps,\n  createFlexChildCSSProps,\n  createFontCSSProps,\n  createMarginCSSProps,\n  createPaddingCSSProps,\n  filterProps,\n  FlexProps,\n  mergeThemedStyles,\n  TextProps,\n  WithStyle,\n} from './base'\n\nconst themedTextStyle: StyleFunction<BaseTheme, TextProps> = (props: TextProps): IStyle => ({\n  display: 'inline-block',\n  ...createMarginCSSProps(props),\n  ...createPaddingCSSProps(props),\n  ...createFlexChildCSSProps(props),\n  ...createFontCSSProps(props),\n})\n\nexport class Text<T extends BaseTheme> extends React.Component<TextProps & WithStyle<T> & React.HTMLAttributes<HTMLSpanElement>> {\n\n  public render() {\n    const {children, style, ...rest} = this.props\n    const styles = mergeThemedStyles<T, BoxProps>(themedTextStyle, style)\n    return (\n      <FelaComponent<T, FlexProps> style={styles} {...rest}>\n        {({className}) => (\n          <span className={className} {...filterProps(rest)}>\n            {children}\n          </span>\n        )}\n      </FelaComponent>\n    )\n  }\n}\n","import * as React from 'react'\n\nexport type Spacing = number | string\n\ntype Context = {\n  spacing: Spacing,\n}\n\nexport const GridContext = React.createContext<Context>({\n  spacing: 0,\n})\n","import * as React from 'react'\n\nimport {Spacing} from './GridContext'\n\nexport const testGridContext = (spacing: Spacing, child: React.ReactNode) => {\n  if (spacing === null || spacing === undefined) {\n    if (process.env.NODE_ENV !== 'production') {\n      return (\n        <div>Missing <span style={{color: 'white', backgroundColor: 'red'}}>GridContext</span>\n          This component is rendered outside of Grid</div>\n      )\n    }\n    return <div className=\"grid-context-missing\"/>\n  }\n  return child\n}\n","export const addUnitIfNeeded = (value: any | string, propertyUnit?: string): string => {\n  const valueType = typeof value\n  if ((valueType === 'number' || (valueType === 'string' && !isNaN(value)))) {\n    return `${value}${propertyUnit || 'px'}`\n  }\n  return `${value}`\n}\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '../..'\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\nimport {addUnitIfNeeded} from './utils'\n\ntype Size = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\n\nexport const GRID_SIZE: Size = 12\n\ninterface Props {\n  size?: Size,\n}\n\ninterface ColManipulatedProps extends Props {\n  rowBreak?: boolean,\n  marginTop?: string | number,\n  children: React.ReactNode\n}\n\ninterface RowContainerProps extends Props {\n  spacing?: number | string,\n}\n\nexport class Col extends React.Component<Props> {\n\n  public static defaultProps = {\n    size: GRID_SIZE,\n  }\n\n  public render() {\n    const internalProps = this.props as ColManipulatedProps\n    const {children, rowBreak, marginTop, size} = internalProps\n    const effectiveSize: number = size ? size : 12\n    const colStyle: StyleFunction<BaseTheme, RowContainerProps> = ({spacing}): IStyle => {\n      const marginRight = rowBreak ? '0px' : spacing\n      const spacingWithUnit = addUnitIfNeeded(spacing)\n      const availableSpace = `(100% - ${spacingWithUnit} * ${GRID_SIZE - 1})`\n      const coveredSpacing = `${spacingWithUnit} * ${effectiveSize - 1}`\n      return ({\n        // evenly distribute the full width considering the spacing\n        width: `calc(${availableSpace} / ${GRID_SIZE} * ${effectiveSize} + ${coveredSpacing})`,\n        marginRight,\n        marginTop,\n      })\n    }\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <FelaComponent style={colStyle} spacing={spacing}>\n              {children}\n            </FelaComponent>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n","/* tslint:disable */\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\n\nimport {BaseTheme} from '../..'\nimport {createPaddingCSSProps, createStylingCSSProps, mergeThemedStyles, PaddingProps, StylingProps, WithStyle} from '../base'\nimport {GRID_SIZE} from './Col'\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\n\ninterface Props<T extends BaseTheme> extends WithStyle<T>, PaddingProps, StylingProps {\n}\n\ninterface RowContainerProps<T extends BaseTheme> extends Props<T> {\n  spacing?: number | string,\n}\n\ninterface RowStyle extends IStyle {\n  ':first-child': IStyle,\n}\n\nclass RowContainer<T extends BaseTheme> extends React.Component<RowContainerProps<T>> {\n\n  public render() {\n    const rowStyle: StyleFunction<BaseTheme, RowContainerProps<T>> = ({style, spacing, ...otherProps}): RowStyle => ({\n      ...createPaddingCSSProps(otherProps),\n      ...createStylingCSSProps(otherProps),\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%',\n      marginTop: spacing,\n      ':first-child': {\n        marginTop: 0,\n      },\n    })\n    const {children, style, ...otherProps} = this.props\n    const styles = mergeThemedStyles<T, RowContainerProps<T>>(rowStyle, style)\n    return (\n      <FelaComponent<T> style={styles} {...otherProps}>\n        {children}\n      </FelaComponent>\n    )\n  }\n}\n\nexport class ColRow<T extends BaseTheme> extends React.Component<Props<T>> {\n\n  renderChildren(spacing: string | number) {\n    let currentRowSize = 0\n    let rowsCount = 0\n\n    // see https://mxstbr.blog/2017/02/react-children-deepdive/#looping-over-children\n    return React.Children.map(this.props.children, (child) => {\n      const currentChild = child as any\n      // calculate the sum of all <Col> sizes\n      currentRowSize += currentChild.props.size\n\n      // the <Col> child fills up the full space -> manipulate rowBreak and marginTop\n      if (currentRowSize === GRID_SIZE) {\n        currentRowSize = 0\n        rowsCount++\n        return React.cloneElement((currentChild), {\n          rowBreak: true,\n          marginTop: rowsCount > 1 ? spacing : 0\n        })\n      }\n\n      // increase the row count if the current <Col> will be rendered at the next line\n      if (currentRowSize >= GRID_SIZE) {\n        rowsCount++\n      }\n\n      // for all rows except the first manipulate the marginTop of the <Col> child\n      if (rowsCount > 0) {\n        return React.cloneElement((currentChild), {\n          rowBreak: false,\n          marginTop: spacing\n        })\n      }\n      return currentChild\n    })\n  }\n\n  public render() {\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <RowContainer spacing={spacing} {...this.props}>\n              {this.renderChildren(spacing)}\n            </RowContainer>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n","/* tslint:disable:max-classes-per-file */\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '../..'\nimport {\n  BoxModelProps,\n  createBoxModelCSSProps,\n  createFlexChildCSSProps,\n  createMarginCSSProps,\n  createPaddingCSSProps,\n  createStylingCSSProps,\n  FlexChildProps,\n  MarginProps,\n  mergeThemedStyles,\n  PaddingProps,\n  StylingProps,\n  WithStyle,\n} from '../base'\n\nimport {GridContext} from './GridContext'\n\ninterface GridContainerStyleProps<T extends BaseTheme> extends\n  WithStyle<T>, PaddingProps, FlexChildProps, StylingProps, BoxModelProps, MarginProps {\n  children?: React.ReactNode,\n  maxWidth?: number | string,\n  center?: boolean,\n}\n\ninterface Props<T extends BaseTheme> extends GridContainerStyleProps<T> {\n  spacing: number | string,\n}\n\nclass GridContainer<T extends BaseTheme> extends React.Component<GridContainerStyleProps<T>> {\n\n  public render() {\n    // tslint:disable-next-line:no-shadowed-variable\n    const gridStyle: StyleFunction<BaseTheme, GridContainerStyleProps<T>> = ({maxWidth, center, ...otherProps}): IStyle => ({\n      margin: center ? 'auto' : 0,\n      ...createBoxModelCSSProps(otherProps),\n      ...createMarginCSSProps(otherProps),\n      ...createPaddingCSSProps(otherProps),\n      ...createFlexChildCSSProps(otherProps),\n      ...createStylingCSSProps(otherProps),\n      boxSizing: 'border-box',\n      maxWidth,\n    })\n    const {children, style, center, ...otherProps} = this.props\n    if (process.env.NODE_ENV !== 'production') {\n      if (center && (otherProps.mx || otherProps.ml || otherProps.mr)) {\n        console.warn('The Grid property center is set to true and one of the properties mx, ml or mr is set. ' +\n          'This might lead to unexpected behaviour.')\n      }\n    }\n    const styles = mergeThemedStyles<T, GridContainerStyleProps<T>>(gridStyle, style)\n    return (\n      <FelaComponent<T, GridContainerStyleProps<T>> style={styles} center={center} {...otherProps}>\n        {children}\n      </FelaComponent>\n    )\n  }\n}\n\n/**\n * Use this grid component for layouts that place multiple components (further called panels) in the same\n * row and you want to distribute the full width amongst them. This implementation is based on the flexbox\n * grow property. The default panel size is 1 which translates to 'flex-grow: 1 0 0%'.\n *\n * The mobile rendering breaks after each panel.\n *\n * The spacing between the rows and panels can be configured by setting the 'spacing' property.\n * Additionally the maxWidth and the center properties so that these simple use cases there is no need\n * for a wrapper component.\n *\n * Complex layouts can be achieved by using Grid components instead of panels.\n *\n * You should only use row components as children of the Grid, and Panel components as children of Row\n * components.\n */\nexport class Grid<T extends BaseTheme> extends React.Component<Props<T>> {\n\n  public static defaultProps = {\n    maxWidth: 'auto',\n    center: false,\n    spacing: 0,\n  }\n\n  public render() {\n    const {spacing, ...otherProps} = this.props\n    return (\n      <GridContainer {...otherProps}>\n        <GridContext.Provider value={{spacing}}>\n          {this.props.children}\n        </GridContext.Provider>\n      </GridContainer>\n    )\n  }\n}\n\n","/* tslint:disable:max-classes-per-file */\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '../..'\nimport {createPaddingCSSProps, createStylingCSSProps, mergeThemedStyles, PaddingProps, StylingProps, WithStyle} from '../base'\n\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\n\ninterface Props<T extends BaseTheme> extends WithStyle<T>, PaddingProps, StylingProps {\n  height?: number | string,\n  minHeight?: number | string,\n}\n\ninterface RowContainerProps<T extends BaseTheme> extends Props<T> {\n  spacing?: number | string,\n}\n\ninterface RowStyle extends IStyle {\n  ':first-child': IStyle,\n  '@media (min-width: 768px)': IStyle,\n}\n\nclass RowContainer<T extends BaseTheme> extends React.Component<RowContainerProps<T>> {\n\n  public render() {\n    const rowStyle: StyleFunction<BaseTheme, RowContainerProps<T>> = (\n      // tslint:disable-next-line:no-shadowed-variable\n      {style, minHeight, spacing, height, ...otherProps}): RowStyle => ({\n      ...createPaddingCSSProps(otherProps),\n      ...createStylingCSSProps(otherProps),\n      boxSizing: 'border-box',\n      display: 'flex',\n      // wrap all flex items -> since a panel has a mobile width of 100%, each\n      // panel visually gets its own row\n      flexWrap: 'wrap',\n      // let all content items (= panels) claim the full space\n      alignItems: 'stretch',\n      width: '100%',\n      minHeight,\n      ':first-child': {\n        marginTop: `-${spacing}`,\n      },\n      '@media (min-width: 768px)': {\n        flexWrap: 'nowrap',\n        height,\n      },\n    })\n    const {children, style, ...otherProps} = this.props\n    const styles = mergeThemedStyles<T, RowContainerProps<T>>(rowStyle, style)\n    return (\n      <FelaComponent<T> style={styles} {...otherProps}>\n        {children}\n      </FelaComponent>\n    )\n  }\n}\n\nexport class Row<T extends BaseTheme> extends React.Component<Props<T>> {\n\n  public static defaultProps = {\n    height: 'auto',\n    minHeight: 'auto',\n  }\n\n  public render() {\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <RowContainer spacing={spacing} {...this.props}>\n              {this.props.children}\n            </RowContainer>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n","/* tslint:disable:max-classes-per-file */\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {CSSProperties} from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\n\nimport {BaseTheme} from '../..'\nimport {\n  createFontCSSProps,\n  createPaddingCSSProps,\n  createStylingCSSProps,\n  FlexContainerProps,\n  FontProps,\n  mergeThemedStyles,\n  PaddingProps,\n  StylingProps,\n  WithStyle,\n} from '../base'\nimport {createFlexContainerCSSStyle} from '../Flex'\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\nimport {addUnitIfNeeded} from './utils'\n\ninterface Props<T extends BaseTheme> extends WithStyle<T>, PaddingProps, StylingProps, FontProps, FlexContainerProps {\n  size?: number,\n  width?: string | number,\n}\n\ninterface PanelContainerProps<T extends BaseTheme> extends Props<T> {\n  spacing?: number | string,\n}\n\ninterface PanelTabletStyle extends IStyle {\n  ':not(:last-child)': CSSProperties,\n}\n\ninterface PanelStyle extends IStyle {\n  '@media (min-width: 768px)': PanelTabletStyle,\n}\n\nconst DEFAULT_WIDTH = '0%'\n\nconst isDefaultWidth = (width: string | number | undefined) => {\n  return !width || width === DEFAULT_WIDTH || width === 0 || width === '0'\n}\n\nconst calcBasis = (\n  spacing: number | string | undefined,\n  size: number | undefined,\n  width: number | string | undefined) => {\n  if (width && !isDefaultWidth(width)) {\n    return addUnitIfNeeded(width)\n  }\n  // if size is zero, give the panel the width it needs,\n  if (!size) {\n    return 'auto'\n  }\n  // if there is no explicit width, add the \"internal\" spacing widths to flex basis\n  return `calc(${addUnitIfNeeded(spacing)} * ${size - 1})`\n}\n\nclass PanelContainer<T extends BaseTheme> extends React.Component<PanelContainerProps<T>> {\n\n  public render() {\n    // tslint:disable-next-line:no-shadowed-variable\n    const panelStyle: StyleFunction<BaseTheme, PanelContainerProps<T>> = ({width, size, spacing, ...otherProps}): PanelStyle => ({\n      ...createPaddingCSSProps(otherProps),\n      ...createFontCSSProps(otherProps),\n      ...createStylingCSSProps(otherProps),\n      ...createFlexContainerCSSStyle(otherProps),\n      // mobile is always full width (flexGrow, flexShrink, width)\n      flexGrow: 1,\n      flexShrink: 0,\n      width: '100%',\n      height: 'auto',\n      overflow: 'hidden',\n      marginTop: spacing,\n      '@media (min-width: 768px)': {\n        // either set the width OR participate in the flex grow calculation\n        width: '0',\n        flex: `${isDefaultWidth(width) ? size : 0} 0 ${calcBasis(spacing, size, width)}`,\n        ':not(:last-child)': {\n          paddingRight: spacing,\n        },\n      },\n    })\n    const {style, children, ...otherProps} = this.props\n    const styles = mergeThemedStyles<T, PanelContainerProps<T>>(panelStyle, style)\n    return (\n      <FelaComponent<T> style={styles} {...otherProps}>\n        {children}\n      </FelaComponent>\n    )\n  }\n}\n\nexport class Panel<T extends BaseTheme> extends React.Component<Props<T>> {\n\n  public static defaultProps = {\n    size: 1,\n    width: DEFAULT_WIDTH,\n  }\n\n  public render() {\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <PanelContainer spacing={spacing} {...this.props}>\n              {this.props.children}\n            </PanelContainer>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n","import {IRenderer} from 'fela'\nimport React from 'react'\nimport {RendererProvider} from 'react-fela'\n\nexport type Props = {\n  renderer: IRenderer,\n  children: React.ReactNode,\n}\n\nexport class IndoqaFela extends React.Component<Props> {\n\n  public render() {\n    return (\n      <RendererProvider renderer={this.props.renderer}>\n        {this.props.children}\n      </RendererProvider>\n    )\n  }\n}\n","import {createRenderer as createFelaRenderer} from 'fela'\nimport {renderResetCss} from '..'\n\nconst DEFAULT_CONFIG = {\n  plugins: [],\n}\n\nexport type CreateRendererParams = {\n  init?: any,\n  config?: any,\n  resetCss?: boolean,\n}\n\nexport const createRenderer = ({init = () => ({}), config = DEFAULT_CONFIG, resetCss = true}: CreateRendererParams) => {\n  const renderer = createFelaRenderer(config)\n  if (resetCss) {\n    renderResetCss(renderer)\n  }\n  init(renderer)\n  return renderer\n}\n\n","const typeScaleFactor = 1.333\nconst typeScaleBase = 14\nconst standardFont = 'sans-serif'\nexport const typeScale = (level: number) => typeScaleBase + (typeScaleFactor * level)\n\nexport declare interface BaseFontSizes {\n  readonly verySmall: number | string,\n  readonly small: number | string,\n  readonly text: number | string,\n  readonly big: number | string,\n  readonly veryBig: number | string,\n}\n\nexport declare interface BaseFonts {\n  readonly text: string,\n}\n\nexport declare interface BaseColors {\n  readonly text: string,\n}\n\nexport declare interface BaseSpacing {\n  readonly space0: number | string,\n  readonly space1: number | string,\n  readonly space2: number | string,\n  readonly space3: number | string,\n  readonly space4: number | string,\n}\n\nexport declare interface BaseTheme {\n  readonly fontSizes: Partial<BaseFontSizes>,\n  readonly fonts: Partial<BaseFonts>,\n  readonly colors: Partial<BaseColors>,\n  readonly spacing: Partial<BaseSpacing>,\n  readonly layout: {},\n}\n\nexport const baseTheme: BaseTheme = {\n  fontSizes: {\n    text: typeScale(0),\n    big: typeScale(1),\n    veryBig: typeScale(2),\n    small: typeScale(-1),\n    verySmall: typeScale(-2),\n  },\n  fonts: {\n    text: standardFont,\n  },\n  colors: {\n    text: '#000000',\n  },\n  spacing: {\n    space0: 0,\n    space1: '0.5rem',\n    space2: '1rem',\n    space3: '2rem',\n    space4: '4rem',\n  },\n  layout: {},\n}\n","import {Box, Col, ColRow, Grid, Panel, Row} from '@indoqa/style-system'\nimport * as React from 'react'\n\nexport default class GridSamples extends React.Component {\n\n  public render() {\n    const innerBox = (\n      <Box bg=\"primary\" fullWidth fullHeight style={{height: '29px'}}>\n        foo\n      </Box>\n    )\n    const innerBox2 = (\n      <Box bg=\"primary\" fullWidth fullHeight style={{height: '29px', backgroundColor: 'red'}}>\n        foo\n      </Box>\n    )\n    return (\n      <Box>\n        <h1>Grid page</h1>\n        <Grid spacing=\"0.5rem\">\n          <Row>\n            <Panel>{innerBox2}</Panel>\n            <Panel>{innerBox2}</Panel>\n            <Panel>{innerBox2}</Panel>\n          </Row>\n          <ColRow>\n            <Col size={4}>{innerBox}</Col>\n            <Col size={4}>{innerBox}</Col>\n            <Col size={4}>{innerBox}</Col>\n            <Col size={6}>\n              <Grid spacing={2}>\n                <ColRow>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                  <Col size={3}>{innerBox}</Col>\n                </ColRow>\n              </Grid>\n            </Col>\n            <Col size={2}>{innerBox}</Col>\n            <Col size={2}>{innerBox}</Col>\n            <Col size={2}>{innerBox}</Col>\n            <Col size={6}>{innerBox}</Col>\n            <Col size={6}>\n              <Grid spacing={1}>\n                <Row>\n                  <Panel>\n                    {innerBox2}\n                  </Panel>\n                  <Panel>\n                    {innerBox2}\n                  </Panel>\n                  <Panel>\n                    {innerBox2}\n                  </Panel>\n                </Row>\n                <Row>\n                  <Panel>\n                    {innerBox2}\n                  </Panel>\n                </Row>\n              </Grid>\n            </Col>\n            <Col size={5}>{innerBox}</Col>\n            <Col size={7}>{innerBox}</Col>\n            <Col size={12}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={1}>{innerBox}</Col>\n            <Col size={11}>{innerBox}</Col>\n          </ColRow>\n          <Row>\n            <Panel>{innerBox2}</Panel>\n            <Panel>{innerBox2}</Panel>\n            <Panel>{innerBox2}</Panel>\n          </Row>\n        </Grid>\n        <h2>col-row</h2>\n        <Grid spacing={10}>\n          <ColRow>\n            <Col size={12}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n            <Col size={3}>{innerBox}</Col>\n          </ColRow>\n        </Grid>\n      </Box>\n    )\n  }\n}\n","import {SGTheme} from './SGTheme'\n\nconst fontFamilies = {\n  base: 'Lato, sans-serif',\n  heading: 'Oswald, sans-serif',\n}\n\nexport const lightTheme: SGTheme = {\n  colors: {\n    primaryDark: '#868E96',\n    primary: '#E9ECEF',\n    primaryLight: '#F1F3F5',\n    background: '#FFFFFF',\n    text: '#495057',\n    textInverted: '#FFFFFF',\n  },\n  fontFamilyCSSImports: 'https://fonts.googleapis.com/css?family=Lato|Oswald:700',\n  fontSizes: {\n    verySmall: '0.7rem',\n    small: '0.8rem',\n    text: '0.9rem',\n    big: '1.0rem',\n    veryBig: '1.2rem',\n  },\n  fontStyles: {\n    base: {\n      fontFamily: fontFamilies.base,\n      fontSize: '0.9rem',\n      lineHeight: 1.2,\n    },\n    headline: {\n      fontFamily: fontFamilies.heading,\n      fontWeight: 700,\n      lineHeight: 1.2,\n    },\n  },\n  spacing: {\n    space0: '0',\n    space1: '0.25rem',\n    space2: '0.5rem',\n    space3: '1rem',\n    space4: '1.5rem',\n  },\n  layout: {\n    topMenuHeight: '5rem',\n    colorPanelBorder: 'solid 1px #dedede',\n  },\n}\n","import * as React from 'react'\nimport {SGTheme} from './SGTheme'\nimport {lightTheme} from './sgThemes'\n\nexport default React.createContext<SGTheme>(lightTheme)\n","import * as React from 'react'\nimport {SGTheme} from './SGTheme'\nimport StyleGuideThemeContext from './SGThemeContext'\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\nexport interface WithSGTheme {sgTheme: SGTheme}\n\n// see https://github.com/Microsoft/TypeScript/issues/28748\nexport function withSGTheme<P extends WithSGTheme, R = Omit<P, 'sgTheme'>>(\n  Component: React.ComponentClass<P> | React.FC<P>,\n): React.FC<R> {\n  return function BoundComponent(props: R) {\n    return (\n      <StyleGuideThemeContext.Consumer>\n        {(value) => <Component sgTheme={value} {...(props as any)} />}\n      </StyleGuideThemeContext.Consumer>\n    )\n  }\n}\n","import {Box} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface Props extends WithSGTheme {\n  color?: string,\n  name: string,\n}\n\nconst toHexString = (color: string) => {\n  return color.startsWith('#') ? color.substr(1) : color\n}\n\n/* tslint:disable:no-bitwise */\n// tslint:disable-next-line\n/* see https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color */\nconst calcTextColor = (color?: string) => {\n  if (!color) {\n    return '#fff'\n  }\n  const bigint = parseInt(toHexString(color), 16)\n  const red = (bigint >> 16) & 255\n  const green = (bigint >> 8) & 255\n  const blue = bigint & 255\n  return (red * 0.299 + green * 0.587 + blue * 0.114) > 180 ? '#000' : '#fff'\n}\n\nconst ColorPanel = ({color, name, sgTheme}: Props) => {\n  const textColor = calcTextColor(color)\n  const style: IStyle = {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '12rem',\n    height: '7rem',\n    backgroundColor: color,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    padding: sgTheme.spacing.space1,\n    marginRight: sgTheme.spacing.space2,\n    marginBottom: sgTheme.spacing.space2,\n    borderRadius: '3px',\n    border: sgTheme.layout.colorPanelBorder,\n  }\n  return (\n    <FelaComponent style={style}>\n      <Box\n        style={{\n          ...sgTheme.fontStyles.base,\n          color: textColor,\n          fontSize: sgTheme.fontSizes.small,\n          marginBottom: 'auto',\n        }}\n      >\n        {name}\n      </Box>\n      <Box\n        style={{\n          ...sgTheme.fontStyles.base,\n          color: textColor,\n          fontSize: sgTheme.fontSizes.verySmall,\n        }}\n      >\n        {color}\n      </Box>\n    </FelaComponent>\n  )\n}\n\nexport default withSGTheme(ColorPanel)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface Props extends WithSGTheme {\n  color?: string,\n}\n\nconst ColorPanel = ({color, sgTheme}: Props) => {\n  const style: IStyle = {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '5rem',\n    height: '5rem',\n    backgroundColor: color,\n    padding: sgTheme.spacing.space1,\n    marginRight: sgTheme.spacing.space1,\n    marginBottom: sgTheme.spacing.space1,\n    borderRadius: '3px',\n    border: sgTheme.layout.colorPanelBorder,\n  }\n  return (\n    <FelaComponent style={style} />\n  )\n}\n\nexport default withSGTheme(ColorPanel)\n","import {Flex} from '@indoqa/style-system'\nimport * as React from 'react'\nimport {Color} from '../types'\nimport ColorPanel from './ColorPanel'\nimport SmallColorPanel from './SmallColorPanel'\n\ninterface Props {\n  colors: Color[]\n  small?: boolean,\n}\n\nconst renderColor = (color: Color, small: boolean | undefined) => {\n  if (small) {\n    return (\n      <SmallColorPanel key={color.name} color={color.hexCode}/>\n    )\n  }\n  return (\n    <ColorPanel key={color.name} name={color.name} color={color.hexCode}/>\n  )\n}\n\nconst ColorsPanel: React.FunctionComponent<Props> = ({colors, small}) => {\n\n  return (\n    <React.Fragment>\n      <Flex>\n        {colors.map(((color) => renderColor(color, small)))}\n      </Flex>\n    </React.Fragment>\n  )\n}\n\nColorsPanel.defaultProps = {\n  small: false,\n}\n\nexport default ColorsPanel\n","import {Flex} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {withSGTheme, WithSGTheme} from './sgtheme/withSGTheme'\n\nconst ContentHeader: React.FC<WithSGTheme> = ({children, sgTheme}) => {\n  const style: IStyle = {\n    boxSizing: 'border-box',\n    height: sgTheme.layout.topMenuHeight,\n    paddingLeft: sgTheme.spacing.space4,\n    backgroundColor: sgTheme.colors.primaryLight,\n  }\n  return (\n    <Flex fullWidth style={style} alignItems=\"center\">\n      {children}\n    </Flex>\n  )\n}\n\nexport default withSGTheme(ContentHeader)\n","import {Box} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {withSGTheme, WithSGTheme} from './sgtheme/withSGTheme'\n\nconst ContentPanel: React.FC<WithSGTheme> = ({children, sgTheme}) => {\n  const style: IStyle = {\n    boxSizing: 'border-box',\n    backgroundColor: sgTheme.colors.background,\n    overflow: 'auto',\n  }\n  return (\n    <Box fullWidth fullHeight style={style}>\n      {children}\n    </Box>\n  )\n}\n\nexport default withSGTheme(ContentPanel)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {SGTheme} from './sgtheme/SGTheme'\nimport {withSGTheme, WithSGTheme} from './sgtheme/withSGTheme'\n\ntype HeadingType = 'h1' | 'h2' | 'h3'\n\ninterface Props extends WithSGTheme {\n  as: HeadingType\n}\n\nconst getConcreteStyle = (level: HeadingType, sgTheme: SGTheme) => {\n  switch (level) {\n    case 'h1': {\n      return {\n        fontSize: sgTheme.fontSizes.veryBig,\n        backgroundColor: sgTheme.colors.primaryDark,\n        color: sgTheme.colors.textInverted,\n        lineHeight: 1,\n        paddingLeft: sgTheme.spacing.space2,\n        paddingRight: sgTheme.spacing.space2,\n        paddingBottom: sgTheme.spacing.space2,\n        paddingTop: sgTheme.spacing.space2,\n      }\n    }\n    case 'h2': {\n      return {\n        fontSize: sgTheme.fontSizes.big,\n        paddingBottom: sgTheme.spacing.space2,\n      }\n    }\n    default: {\n      return {\n        fontSize: sgTheme.fontSizes.small,\n      }\n    }\n  }\n}\n\nconst Heading: React.FC<Props> = ({children, sgTheme, as}) => {\n  const baseStyle: IStyle = {\n    textTransform: 'uppercase',\n    margin: 0,\n    paddingBottom: sgTheme.spacing.space1,\n    marginBottom: sgTheme.spacing.space0,\n    color: sgTheme.colors.primaryDark,\n  }\n\n  return (\n    <FelaComponent style={[baseStyle, sgTheme.fontStyles.headline, getConcreteStyle(as, sgTheme)]} as={as}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nexport default withSGTheme(Heading)\n","import {Flex} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {Link} from 'react-router-dom'\nimport Heading from '../Heading'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface Props extends WithSGTheme {\n  to: string,\n}\n\ninterface MenuLinkStyle extends IStyle {\n  '> a': IStyle,\n}\n\nconst Logo: React.FC<Props> = ({sgTheme, to, children}) => {\n  if (typeof children !== 'string') {\n    return (\n      <Flex fullWidth justifyContent=\"center\">\n        <Link to={to}>\n          {children}\n        </Link>\n      </Flex>\n    )\n  }\n\n  const style: MenuLinkStyle = {\n    listStyle: 'none',\n    paddingLeft: sgTheme.spacing.space3,\n    '> a': {\n      textDecoration: 'none',\n    },\n  }\n  return (\n    <FelaComponent style={style}>\n      <Link to={to}>\n        <Heading as=\"h1\">\n          {children}\n        </Heading>\n      </Link>\n    </FelaComponent>\n  )\n}\n\nexport default withSGTheme(Logo)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport Heading from '../Heading'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface Props extends WithSGTheme {\n  name?: string,\n}\n\nconst List: React.FC = ({children}) => {\n  const style: IStyle = {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n  }\n  return (\n    <FelaComponent style={style} as=\"ul\">\n      {children}\n    </FelaComponent>\n  )\n}\n\nconst MenuGroup: React.FC<Props> = ({sgTheme, name, children}) => {\n  const style: IStyle = {\n    paddingTop: sgTheme.spacing.space2,\n    paddingLeft: sgTheme.spacing.space4,\n  }\n  return (\n    <FelaComponent style={style}>\n      {name && <Heading as=\"h3\">{name}</Heading>}\n      <List>\n        {children}\n      </List>\n    </FelaComponent>\n  )\n}\n\nexport default withSGTheme(MenuGroup)\n","import {Flex} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {withSGTheme, WithSGTheme} from '../sgtheme/withSGTheme'\n\nconst MenuHeader: React.FC<WithSGTheme> = ({children, sgTheme}) => {\n  const style: IStyle = {\n    boxSizing: 'border-box',\n    height: sgTheme.layout.topMenuHeight,\n  }\n  return (\n    <Flex fullWidth style={style} alignItems=\"center\">\n      {children}\n    </Flex>\n  )\n}\n\nexport default withSGTheme(MenuHeader)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {NavLink} from 'react-router-dom'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface MenuLinkProps extends WithSGTheme {\n  to: string,\n}\n\ninterface MenuLinkStyle extends IStyle {\n  '> a': IStyle,\n  '> a:visited': IStyle,\n  '> a.active': IStyle,\n}\n\nconst MenuItem: React.FC<MenuLinkProps> = ({sgTheme, to, children}) => {\n  const style: MenuLinkStyle = {\n    paddingBottom: '0.15rem',\n    marginLeft: 0,\n    paddingLeft: 0,\n    listStyle: 'none',\n    '> a': {\n      textDecoration: 'none',\n      ...sgTheme.fontStyles.base,\n      color: sgTheme.colors.text,\n      fontSize: sgTheme.fontSizes.text,\n    },\n    '> a:visited': {\n      textDecoration: 'none',\n      ...sgTheme.fontStyles.base,\n    },\n    '> a.active': {\n      fontWeight: 'bold',\n    },\n  }\n  return (\n    <FelaComponent style={style} as=\"li\">\n      <NavLink to={to}>{children}</NavLink>\n    </FelaComponent>\n  )\n}\n\nexport default withSGTheme(MenuItem)\n","import {Box} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\n\ninterface StyleGuideMenuCSSProps extends IStyle {\n  tablet: IStyle,\n}\n\nconst StyleGuideMenu: React.FC<WithSGTheme> = ({children, sgTheme}) => {\n  const style: StyleGuideMenuCSSProps = {\n    boxSizing: 'border-box',\n    backgroundColor: sgTheme.colors.primary,\n    marginBottom: sgTheme.spacing.space4,\n    tablet: {\n      overflowY: 'auto',\n      borderBottom: 'none',\n    },\n  }\n  return (\n    <Box fullWidth fullHeight style={style}>\n      {children}\n    </Box>\n  )\n}\n\nexport default withSGTheme(StyleGuideMenu)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\n\ninterface Props {\n  fontStyles: IStyle,\n  as?: keyof React.ReactHTML,\n}\n\nconst TextSample: React.FunctionComponent<Props> = ({fontStyles, children, as}) => {\n  const style: IStyle = {\n    paddingBottom: 0,\n  }\n  return (\n    <FelaComponent style={[style, fontStyles]} as={as || 'p'}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nexport default TextSample\n","import * as React from 'react'\n\nexport const headerText = 'The spectacle before us was indeed sublime'\n\nexport const longText = `\n  Apparently we had reached a great height in the atmosphere, for the sky was\n  a dead black, and the stars had ceased to twinkle. By the same illusion which\n  lifts the horizon of the sea to the level of the spectator on a hillside, the\n  sable cloud beneath was dished out, and the car seemed to float in the middle\n  of an immense dark sphere, whose upper half was strewn with silver.\n  Looking down into the dark gulf below, I could see a ruddy light streaming\n  through a rift in the clouds.\n`\n\nexport const shortText = 'Vestibulum id ligula porta felis euismod semper eget lacinia odio sem.'\n\nexport const characters = (\n  <React.Fragment>\n    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Ä Ö Ü À Â È É Ê Ë Î Ï Ô Œ Ù Û Ÿ&nbsp;\n    a b c d e f g h i j k l m n o p q r s t u v w x y z ä ö ü ß à ç é è ê ë î ï ô œ ù û ÿ&nbsp;\n    0 1 2 3 4 5 6 7 8 9&nbsp;\n    ! \" § % & / ( ) = ? + * # ' - _ – . : , ; € $ ¥ ¢ @ | {'{'} {'}'} ' » « „ “ {'<'} {'>'} ® © ×\n  </React.Fragment>\n)\n\nexport const longTextInlineStyle = (\n  <React.Fragment>\n    <p>\n      Apparently we <b>had reached</b> a great height in the atmosphere, for the sky was&nbsp;\n      a dead black, and the stars had ceased to twinkle. By the same illusion which&nbsp;\n      lifts the <a href=\"https://www.google.com\">horizon of the sea</a> to the level of the&nbsp;\n      spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to&nbsp;\n      float in the middle of an\n    </p>\n    <ul>\n      <li>immense dark sphere,</li>\n      <ul>\n        <li>whose upper half</li>\n        <li>was strewn with silver</li>\n      </ul>\n      <li>Looking down into the dark gulf</li>\n    </ul>\n    <p>\n      below, I could see a ruddy<sup>1</sup> light <em>streaming through</em> a rift in the clouds.&nbsp;\n      By the same illusion which lifts the horizon<sup>2</sup> of the <i>sea to the level of the spectator</i>&nbsp;\n      on a hillside, the sable cloud beneath was dished<sub>abc</sub> out, and the car seemed to float in&nbsp;\n      the middle of an\n    </p>\n    <ol>\n      <li>immense dark sphere,</li>\n      <li>whose upper half</li>\n    </ol>\n    <p>\n      was strewn with silver.\n    </p>\n    <p>\n      Apparently we had reached a great height in the atmosphere, for the sky was&nbsp;\n      a dead black, and the stars had ceased to twinkle.\n    </p>\n    <dt>Description lists</dt>\n    <dd>A description list is perfect for defining terms.</dd>\n    <dt>Euismod</dt>\n    <dd>Donec id elit non mi porta gravida at eget <mark>metus</mark>.</dd>\n  </React.Fragment>\n)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {FontSize, FontSizes} from '../types'\nimport TextSample from './TextSample'\nimport {headerText, longText, shortText} from './TextSpecimen'\n\ninterface Props {\n  textFont: IStyle,\n  headlineFont: IStyle,\n  fontSizes: FontSizes\n  textFontSize: FontSize,\n}\n\nconst Container: React.FC = ({children}) => {\n  const style: IStyle = {\n    maxWidth: 650,\n  }\n  return <FelaComponent style={style}>{children}</FelaComponent>\n}\n\nconst FontMixContent: React.FC<Props> = ({textFont, headlineFont, fontSizes, textFontSize}) => {\n  const extendedHeadline1Font: IStyle = {\n    ...headlineFont,\n    fontSize: fontSizes.length > 0 ? fontSizes[0] : '30px',\n  }\n  const extendedHeadline2Font: IStyle = {\n    ...headlineFont,\n    fontSize: fontSizes.length > 1 ? fontSizes[1] : '24px',\n  }\n  const extendedHeadline3Font: IStyle = {\n    ...headlineFont,\n    fontSize: fontSizes.length > 2 ? fontSizes[2] : '18px',\n  }\n  const extendedTextFont: IStyle = {\n    ...textFont,\n    fontSize: textFontSize ? textFontSize : '14px',\n  }\n\n  return (\n    <Container>\n      <TextSample fontStyles={extendedHeadline1Font} as=\"h1\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {longText}\n      </TextSample>\n      <TextSample fontStyles={extendedHeadline2Font} as=\"h2\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {shortText}\n      </TextSample>\n      <TextSample fontStyles={extendedHeadline3Font} as=\"h3\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {longText}\n      </TextSample>\n      <TextSample fontStyles={extendedHeadline3Font} as=\"h3\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {shortText}\n      </TextSample>\n      <TextSample fontStyles={extendedHeadline2Font} as=\"h2\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {longText}\n      </TextSample>\n      <TextSample fontStyles={extendedHeadline1Font} as=\"h1\">\n        {headerText}\n      </TextSample>\n      <TextSample fontStyles={extendedTextFont}>\n        {shortText}\n      </TextSample>\n    </Container>\n  )\n}\n\nexport default FontMixContent\n","import {Box, Flex} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport ColorsPanel from '../colors/ColorsPanel'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\nimport {Color, FontMix, FontSize, FontSizes} from '../types'\nimport FontMixContent from '../typography/FontMixContent'\n\ninterface Props extends WithSGTheme {\n  colors: Color[],\n  fontMixes: FontMix[],\n  fontSizes: FontSizes,\n  textFontSize: FontSize,\n}\n\nconst OverviewPanel: React.FC<Props> = ({fontMixes, fontSizes, textFontSize, colors, sgTheme}) => {\n  const panelStyle: IStyle = {\n    marginTop: sgTheme.spacing.space4,\n  }\n  const textFont = fontMixes[0].textFont\n  const headlineFont = fontMixes[0].headlineFont\n  return (\n    <Flex fullWidth direction=\"column\">\n      <Box>\n        <Box>\n          <ColorsPanel colors={colors} small/>\n        </Box>\n        <Box style={panelStyle}>\n          <FontMixContent\n            textFont={textFont}\n            headlineFont={headlineFont}\n            fontSizes={fontSizes}\n            textFontSize={textFontSize}\n          />\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default withSGTheme(OverviewPanel)\n","import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {withSGTheme, WithSGTheme} from '../sgtheme/withSGTheme'\n\ninterface Props extends WithSGTheme {\n  name: string,\n}\n\nconst Header: React.FunctionComponent<WithSGTheme> = ({sgTheme, children}) => {\n  const style: IStyle = {\n    backgroundColor: sgTheme.colors.primaryLight,\n    textTransform: 'uppercase',\n    ...sgTheme.fontStyles.headline,\n    fontSize: sgTheme.fontSizes.small,\n    color: sgTheme.colors.primaryDark,\n    padding: sgTheme.spacing.space2,\n    borderRadius: '1px',\n    marginBottom: sgTheme.spacing.space2,\n  }\n  return (\n    <FelaComponent style={style}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nconst Container: React.FC<WithSGTheme> = ({sgTheme, children}) => {\n  const style: IStyle = {\n    backgroundColor: sgTheme.colors.background,\n    borderRadius: '3px',\n    marginBottom: '2rem',\n    width: '100%',\n  }\n  return (\n    <FelaComponent style={style}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nconst Content: React.FC<WithSGTheme> = ({sgTheme, children}) => {\n  const style: IStyle = {\n    paddingLeft: sgTheme.spacing.space2,\n    paddingTop: sgTheme.spacing.space2,\n  }\n  return (\n    <FelaComponent style={style}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nconst FontStylePanel: React.FC<Props> = ({sgTheme, name, children}) => {\n  return (\n    <Container sgTheme={sgTheme}>\n      <Header sgTheme={sgTheme}>{name}</Header>\n      <Content sgTheme={sgTheme}>{children}</Content>\n    </Container>\n  )\n}\n\nexport default withSGTheme(FontStylePanel)\n","import {Grid, Panel, Row} from '@indoqa/style-system'\nimport * as React from 'react'\nimport {withSGTheme, WithSGTheme} from '../sgtheme/withSGTheme'\nimport {FontMix, FontSize, FontSizes} from '../types'\nimport FontMixContent from './FontMixContent'\nimport FontStylePanel from './FontStylePanel'\n\ninterface Props extends WithSGTheme {\n  fontSizes: FontSizes,\n  fontMix: FontMix,\n  textFontSize: FontSize,\n}\n\nconst FontMixPanel: React.FC<Props> = ({fontSizes, textFontSize, fontMix}) => {\n  const {name, textFont, headlineFont} = fontMix\n  return (\n    <Grid spacing=\"1rem\" fullWidth>\n      <Row>\n        <Panel>\n          <FontStylePanel name={name}>\n            <FontMixContent\n              textFont={textFont}\n              headlineFont={headlineFont}\n              fontSizes={fontSizes}\n              textFontSize={textFontSize}\n            />\n          </FontStylePanel>\n        </Panel>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default withSGTheme(FontMixPanel)\n","import {Grid, Panel, Row} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {SGTheme} from '../sgtheme/SGTheme'\nimport {withSGTheme, WithSGTheme} from '../sgtheme/withSGTheme'\nimport {FontSizes} from '../types'\nimport FontStylePanel from './FontStylePanel'\nimport {characters} from './TextSpecimen'\n\ninterface HeadlineProps extends WithSGTheme {\n  fontStyles: IStyle,\n}\n\ninterface WithFontSize {\n  fontSize: string | number | undefined\n}\n\ninterface Props extends HeadlineProps {\n  name: string,\n  fontSizes: FontSizes,\n}\n\nconst HeadlineSample: React.FC<HeadlineProps & WithFontSize> = ({fontStyles, fontSize, sgTheme, children}) => {\n  const style: IStyle = {\n    marginBottom: sgTheme.spacing.space2,\n    fontSize,\n  }\n  return (\n    <FelaComponent style={[fontStyles, style]}>\n      {children}\n    </FelaComponent>\n  )\n}\n\nconst renderHeadlineSizeSamples = (fontStyles: IStyle, fontSizes: FontSizes, sgTheme: SGTheme) => {\n  return fontSizes.map((fontSize) => {\n    return (\n      <HeadlineSample fontStyles={fontStyles} fontSize={fontSize} sgTheme={sgTheme} key={fontSize}>\n        The quick brown fox jumps over the lazy dog.\n      </HeadlineSample>\n    )\n  })\n}\n\nconst HeadlineFontPanel: React.FC<Props> = ({fontStyles, fontSizes, name, sgTheme}) => {\n  return (\n    <Grid fullWidth spacing=\"1rem\">\n      <Row>\n        <Panel>\n          <FontStylePanel name={`${name} / sizes`}>\n            {renderHeadlineSizeSamples(fontStyles, fontSizes, sgTheme)}\n          </FontStylePanel>\n        </Panel>\n        <Panel>\n          <FontStylePanel name={`${name} / characters`}>\n            <HeadlineSample fontStyles={fontStyles} fontSize={fontSizes[0]} sgTheme={sgTheme}>\n              {characters}\n            </HeadlineSample>\n          </FontStylePanel>\n        </Panel>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default withSGTheme(HeadlineFontPanel)\n","import {Grid, Panel, Row} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {withSGTheme, WithSGTheme} from '../sgtheme/withSGTheme'\nimport FontStylePanel from './FontStylePanel'\nimport TextSample from './TextSample'\nimport {characters, longText, longTextInlineStyle} from './TextSpecimen'\n\ninterface Props extends WithSGTheme {\n  name: string,\n  fontStyles: IStyle,\n}\n\nconst TextFontPanel: React.FC<Props> = ({fontStyles, name}) => {\n  return (\n    <Grid spacing=\"1rem\" fullWidth>\n      <Row>\n        <Panel>\n          <FontStylePanel name={`${name} / plain`}>\n            <TextSample fontStyles={fontStyles}>\n              {characters}\n            </TextSample>\n            <TextSample fontStyles={fontStyles}>\n              {longText}\n            </TextSample>\n          </FontStylePanel>\n        </Panel>\n        <Panel>\n          <FontStylePanel name={`${name} / inline styles`}>\n            <TextSample fontStyles={fontStyles} as=\"div\">\n              {longTextInlineStyle}\n            </TextSample>\n          </FontStylePanel>\n        </Panel>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default withSGTheme(TextFontPanel)\n","import {Flex} from '@indoqa/style-system'\nimport * as React from 'react'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\nimport {Font, FontMix, FontSize, FontSizes} from '../types'\nimport FontMixPanel from './FontMixPanel'\nimport HeadlineFontStylePanel from './HeadlineFontPanel'\nimport TextFontStylePanel from './TextFontPanel'\n\ninterface Props extends WithSGTheme {\n  textFonts: Font[],\n  headlineFonts: Font[],\n  fontSizes: FontSizes,\n  fontMixes: FontMix[],\n  textFontSize: FontSize,\n}\n\nconst renderTextFont = (font: Font) => {\n  return (\n    <TextFontStylePanel\n      key={font.name}\n      name={font.name}\n      fontStyles={font.fontStyle}\n    />\n  )\n}\n\nconst renderHeadlineFont = (font: Font, fontSizes: FontSizes) => {\n  return (\n    <HeadlineFontStylePanel\n      key={font.name}\n      name={font.name}\n      fontStyles={font.fontStyle}\n      fontSizes={fontSizes}\n    />\n  )\n}\n\nconst renderFontMixes = (fontMix: FontMix, fontSizes: FontSizes, textFontSize: FontSize) => {\n  return (\n    <FontMixPanel\n      key={fontMix.name}\n      fontMix={fontMix}\n      fontSizes={fontSizes}\n      textFontSize={textFontSize}\n    />\n  )\n}\n\nconst TypographyPanel: React.FC<Props> = ({textFonts, headlineFonts, fontMixes, fontSizes, textFontSize}) => {\n  return (\n    <React.Fragment>\n      <Flex>\n        {headlineFonts.map((font) => renderHeadlineFont(font, fontSizes))}\n      </Flex>\n      <Flex>\n        {textFonts.map((font) => renderTextFont(font))}\n      </Flex>\n      <Flex>\n        {fontMixes.map((fontMix) => renderFontMixes(fontMix, fontSizes, textFontSize))}\n      </Flex>\n    </React.Fragment>\n  )\n}\n\nexport default withSGTheme(TypographyPanel)\n","const importCss = (id: string, url: string) => {\n  const mountNode = document.getElementById(id)\n  if (mountNode) {\n    return\n  }\n  const styleNode = document.createElement('style')\n  styleNode.id = id\n  const head = (document.head) ? document.head : document.createElement('head')\n  head.appendChild(styleNode)\n  styleNode.append(`@import url(\\'${url}\\');`)\n}\n\nexport default importCss\n","import {Box, Grid, Panel, Row} from '@indoqa/style-system'\nimport {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent} from 'react-fela'\nimport {Route} from 'react-router'\n\nimport ColorsPanel from './colors/ColorsPanel'\nimport ContentHeader from './ContentHeader'\nimport ContentPanel from './ContentPanel'\nimport Heading from './Heading'\nimport Logo from './menu/Logo'\nimport MenuGroup from './menu/MenuGroup'\nimport MenuHeader from './menu/MenuHeader'\nimport MenuItem from './menu/MenuItem'\nimport StyleGuideMenu from './menu/StyleGuideMenu'\nimport OverviewPanel from './overview/OverviewPanel'\nimport {SGTheme} from './sgtheme/SGTheme'\nimport StyleGuideThemeContext from './sgtheme/SGThemeContext'\nimport {lightTheme} from './sgtheme/sgThemes'\nimport {WithSGTheme} from './sgtheme/withSGTheme'\nimport {Color, Font, FontMix, FontSize, FontSizes, Group} from './types'\nimport TypographyPanel from './typography/TypographyPanel'\nimport importCss from './utils/importCss'\n\ninterface Props {\n  projectName: string,\n  description?: string,\n  logo?: React.ReactNode,\n  colors: Color[],\n  textFonts: Font[],\n  headlineFonts: Font[],\n  fontSizes: FontSizes,\n  textFontSize: FontSize,\n  fontMixes: FontMix[],\n  groups: Group[],\n  mountPath: string,\n  sgTheme?: SGTheme,\n}\n\ninterface InnerContentPanelProps extends WithSGTheme {\n  name: string,\n}\n\nconst InnerContentPanel: React.FC<InnerContentPanelProps> = ({name, sgTheme, children}) => {\n  const style: IStyle = {\n    paddingTop: sgTheme.spacing.space4,\n    paddingRight: sgTheme.spacing.space4,\n    paddingBottom: sgTheme.spacing.space4,\n    paddingLeft: sgTheme.spacing.space4,\n  }\n  return (\n    <React.Fragment>\n      <ContentHeader>\n        {name && <Heading as=\"h1\">{name}</Heading>}\n      </ContentHeader>\n      <Box style={style}>\n        {children}\n      </Box>\n    </React.Fragment>\n  )\n}\n\nconst createComponentRoute = (name: string, component: React.ReactNode, mountPath: string, sgTheme: SGTheme) => {\n  const componentMountPath = `${mountPath}/${name.toLowerCase()}`\n  return (\n    <Route key={componentMountPath} exact path={componentMountPath} render={() => (\n      <InnerContentPanel name={name} sgTheme={sgTheme}>\n        {component}\n      </InnerContentPanel>\n    )}/>\n  )\n}\n\n\n/**\n * Todos\n * - make colors and overview mixedFontStyle clickable to get to the details\n *   -> see https://www.webdeveloperpal.com/2018/03/07/react-router-v4-navigate-and-redirect-programmatically/\n * - search box\n * - set <title>\n * - printing\n * - mobile menu -> collapsing\n * - show effective CSS properties\n * - show spacings\n * - inline styles (inkl. ul, ol, link, table, etc.)\n */\n/**\n * see\n * - https://github.com/yeun/open-color\n * - https://www.producthunt.com/posts/fontspark\n * - https://github.com/pitr12/base-styling-components/blob/master/README.md\n */\nclass StyleGuide extends React.Component<Props, WithSGTheme> {\n\n  constructor(props: Props) {\n    super(props)\n    const {sgTheme} = props\n    this.state = {\n      sgTheme: sgTheme || lightTheme,\n    }\n  }\n\n  public getDescription() {\n    const {projectName, description} = this.props\n    if (description || description === '') {\n      return description\n    }\n    return `Styleguide ${projectName}`\n  }\n\n  public componentDidMount() {\n    const {sgTheme} = this.state\n    const {fontFamilyCSSImports} = sgTheme\n    importCss('style-guide-fonts', fontFamilyCSSImports)\n    document.title = `${this.props.projectName} | Style-Guide`\n  }\n\n  public render() {\n    const {\n      colors,\n      textFonts,\n      headlineFonts,\n      fontMixes,\n      fontSizes,\n      textFontSize,\n      groups,\n      mountPath,\n      logo,\n      projectName,\n    } = this.props\n    const {sgTheme} = this.state\n\n    const menuGroups = groups.map((componentDescription) => {\n      const {name, descriptions} = componentDescription\n      const menuItems = descriptions.map((description) => {\n        const componentMountPath = `${mountPath}/${name.toLowerCase()}/${description.name.toLowerCase()}`\n        return <MenuItem key={componentMountPath} to={componentMountPath}>{description.name}</MenuItem>\n      })\n      return (\n        <MenuGroup name={name} key={name}>\n          {menuItems}\n        </MenuGroup>\n      )\n    })\n\n    const routes: JSX.Element[] = []\n    groups.forEach((componentDescription) => {\n      const {name, descriptions} = componentDescription\n      descriptions.forEach((description) => {\n        routes.push(createComponentRoute(\n          description.name,\n          description.component,\n          `${mountPath}/${name.toLowerCase()}`,\n          sgTheme,\n        ))\n      })\n    })\n\n    return (\n      <StyleGuideThemeContext.Provider value={sgTheme}>\n        <Grid spacing={0}>\n          <Row height=\"100vh\">\n            <Panel width=\"15rem\">\n              <StyleGuideMenu>\n                <MenuHeader>\n                  <Logo to={mountPath}>{logo || projectName}</Logo>\n                </MenuHeader>\n                <FelaComponent style={{height: sgTheme.spacing.space3}}/>\n                <MenuGroup name=\"Base Styles\">\n                  <MenuItem to={`${mountPath}/colors`}>Colors</MenuItem>\n                  <MenuItem to={`${mountPath}/typography`}>Typography</MenuItem>\n                </MenuGroup>\n                {menuGroups}\n              </StyleGuideMenu>\n            </Panel>\n            <Panel>\n              <ContentPanel>\n                <Route exact path={mountPath} render={() => (\n                  <InnerContentPanel name={this.getDescription()} sgTheme={sgTheme}>\n                    <OverviewPanel\n                      colors={colors}\n                      fontMixes={fontMixes}\n                      fontSizes={fontSizes}\n                      textFontSize={textFontSize}\n                    />\n                  </InnerContentPanel>\n                )}/>\n                <Route exact path={`${mountPath}/colors`} render={() => (\n                  <InnerContentPanel name=\"Color Scheme\" sgTheme={sgTheme}>\n                    <ColorsPanel colors={colors}/>\n                  </InnerContentPanel>\n                )}/>\n                <Route exact path={`${mountPath}/typography`} render={() => (\n                  <InnerContentPanel name=\"Typography\" sgTheme={sgTheme}>\n                    <TypographyPanel\n                      textFonts={textFonts}\n                      headlineFonts={headlineFonts}\n                      fontMixes={fontMixes}\n                      fontSizes={fontSizes}\n                      textFontSize={textFontSize}\n                    />\n                  </InnerContentPanel>\n                )}/>\n                {routes}\n              </ContentPanel>\n            </Panel>\n          </Row>\n        </Grid>\n      </StyleGuideThemeContext.Provider>\n    )\n  }\n}\n\nexport default StyleGuide\n","import * as React from 'react'\nimport {withTheme} from 'react-fela'\n\nimport {Theme} from '../app/theme'\nimport GridSamples from '../grid/GridSamples'\nimport StyleGuide from './StyleGuide'\nimport {Color, Font, FontMix, FontSize, FontSizes, Group} from './types'\n\ninterface Props {\n  theme: Theme,\n}\n\nclass DemoStyleGuide extends React.Component<Props> {\n\n  public render() {\n    const {theme} = this.props\n\n    const colors: Color[] = [\n      {name: 'primary', hexCode: theme.colors.primary},\n      {name: 'primary-dark', hexCode: theme.colors.primaryDark},\n      {name: 'primary-light', hexCode: theme.colors.primaryLight},\n      {name: 'text', hexCode: theme.colors.text},\n      {name: 'accent', hexCode: theme.colors.accent},\n      {name: 'secondary-text', hexCode: theme.colors.textSecondary},\n      {name: 'divider', hexCode: theme.colors.divider},\n    ]\n    const textFonts: Font[] = [\n      {name: 'text', fontStyle: theme.fontStyles.text},\n    ]\n\n    const headlineFonts: Font[] = [\n      {name: 'headline', fontStyle: theme.fontStyles.headline},\n    ]\n\n    const fontSizes: FontSizes = [\n      theme.fontSizes.extraBig,\n      theme.fontSizes.big,\n      theme.fontSizes.text,\n      theme.fontSizes.small,\n    ]\n\n    const textFontSize: FontSize = theme.fontSizes.text\n\n    const fontMixes: FontMix[] = [\n      {name: 'System fonts', textFont: theme.fontStyles.text, headlineFont: theme.fontStyles.headline},\n    ]\n\n    const atomsGroup: Group = {\n      name: 'Atoms',\n      descriptions: [\n        {\n          name: 'button',\n          component: <button>Click me!</button>,\n        },\n        {\n          name: 'button2',\n          component: <button>Click me again!</button>,\n        },\n      ],\n    }\n\n    const moleculesGroup: Group = {\n      name: 'Molecules',\n      descriptions: [\n        {\n          name: 'Button',\n          component: <button>Click me!</button>,\n        },\n        {\n          name: 'Grid',\n          component: <GridSamples />,\n        },\n      ],\n    }\n\n    const groups = [atomsGroup, moleculesGroup]\n\n    return (\n      <StyleGuide\n        projectName=\"Indoqa Style-System\"\n        description=\"Overview\"\n        textFonts={textFonts}\n        headlineFonts={headlineFonts}\n        fontMixes={fontMixes}\n        fontSizes={fontSizes}\n        textFontSize={textFontSize}\n        colors={colors}\n        groups={groups}\n        mountPath=\"\"\n        // sgTheme={demoTheme}\n      />\n    )\n  }\n}\n\nexport default withTheme(DemoStyleGuide)\n","import monolithic from 'fela-monolithic'\nimport extend from 'fela-plugin-extend'\nimport fallbackValue from 'fela-plugin-fallback-value'\nimport namedKeys from 'fela-plugin-named-keys'\nimport prefixer from 'fela-plugin-prefixer'\nimport unit from 'fela-plugin-unit'\n\nimport {BREAKPOINT_DESKTOP, BREAKPOINT_TABLET} from './breakpoints'\n\nconst keys = namedKeys({\n  desktop: `@media (min-width: ${BREAKPOINT_DESKTOP}px)`,\n  tablet: `@media (min-width: ${BREAKPOINT_TABLET}px)`,\n})\n\nconst config: any = {\n  plugins: [\n    extend(),\n    prefixer(),\n    fallbackValue(),\n    unit(),\n    keys,\n  ],\n  enhancers: [],\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  config.enhancers = [monolithic({prettySelectors: true})]\n  config.debug = true\n}\n\nexport default {\n  config,\n  resetCss: false,\n}\n","import merge from 'deepmerge'\nimport {baseTheme, BaseTheme} from './baseTheme'\n\nexport function buildTheme<T extends BaseTheme>(customTheme: T): T {\n  return (merge(baseTheme, customTheme) as T)\n}\n","import createHistory from 'history/createBrowserHistory'\n\nconst history = createHistory()\n\nexport default history\n","import {BaseColors, BaseFonts, BaseFontSizes, BaseTheme, buildTheme, typeScale} from '@indoqa/style-system'\nimport {CSSProperties} from 'react'\n\ninterface FontSizes extends Partial<BaseFontSizes> {\n  readonly extraBig: number | string,\n}\n\ninterface Colors extends Partial<BaseColors> {\n  readonly primary: string,\n  readonly primaryDark: string,\n  readonly primaryLight: string,\n  readonly accent: string,\n  readonly textSecondary: string\n  readonly divider: string,\n}\n\ninterface Fonts extends Partial<BaseFonts> {\n  readonly headline: string,\n}\n\ninterface FontStyles {\n  readonly text: CSSProperties,\n  readonly headline: CSSProperties,\n}\n\ninterface Layout {\n  readonly actionBarHeight: number,\n  readonly menuWidth: number,\n}\n\nexport declare interface Theme extends BaseTheme {\n  readonly fontSizes: FontSizes,\n  readonly colors: Colors,\n  readonly fonts: Fonts,\n  readonly fontStyles: FontStyles,\n  readonly layout: Layout,\n}\n\nconst systemFonts = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, ' +\n  'sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"'\n\nconst baseFontFamilies = {\n  text: systemFonts,\n  headline: systemFonts,\n}\n\nconst baseColors = {\n  black_1: '#000000',\n  black_2: '#120012',\n  grey_1: '#727272',\n  grey_2: '#BDBDBD',\n  white_3: '#d5d5d5',\n  white_1: '#ffffff',\n  blue_1: '#c5cae9',\n  blue_2: '#3f51b5',\n  blue_3: '#303f9f',\n  orange_1: '#ff5722',\n}\n\nconst baseFontSizes: FontSizes = {\n  text: typeScale(1),\n  big: typeScale(2),\n  veryBig: typeScale(3),\n  extraBig: typeScale(3),\n  small: typeScale(0),\n  verySmall: typeScale(-1),\n}\n\nconst theme: Theme = {\n  fontSizes: baseFontSizes,\n  fonts: {\n    text: baseFontFamilies.text,\n    headline: baseFontFamilies.headline,\n  },\n  fontStyles: {\n    text: {\n      fontFamily: baseFontFamilies.text,\n      lineHeight: 1.3,\n      fontWeight: 400,\n      color: baseColors.black_2,\n    },\n    headline: {\n      fontFamily: baseFontFamilies.headline,\n      lineHeight: 1.2,\n      fontWeight: 700,\n      color: baseColors.black_2,\n    },\n  },\n  colors: {\n    primary: baseColors.blue_2,\n    primaryDark: baseColors.blue_3,\n    primaryLight: baseColors.blue_1,\n    accent: baseColors.orange_1,\n    text: baseColors.black_2,\n    textSecondary: baseColors.grey_1,\n    divider: baseColors.white_1,\n  },\n  spacing: {},\n  layout: {\n    actionBarHeight: 50,\n    menuWidth: 300,\n  },\n}\n\nexport default buildTheme(theme)\n","import {BaseCssProps, createRenderer, IndoqaFela, renderRebootCss} from '@indoqa/style-system'\nimport * as React from 'react'\nimport {ThemeProvider} from 'react-fela'\nimport {Router} from 'react-router'\nimport {Route, Switch} from 'react-router-dom'\nimport DemoStyleGuide from '../style-guide/DemoStyleGuide'\nimport fela from './fela'\nimport history from './history'\nimport theme from './theme'\n\nconst renderer = createRenderer(fela)\n\nconst baseCssProps: BaseCssProps = {\n  spacing: {\n    space1: theme.spacing.space1,\n    space2: theme.spacing.space2,\n  },\n  fontSizes: {\n    text: theme.fontSizes.text,\n    h1: theme.fontSizes.extraBig,\n    h2: theme.fontSizes.veryBig,\n    h3: theme.fontSizes.big,\n  },\n  fontStyles: {\n    text: theme.fontStyles.text,\n    headline: theme.fontStyles.headline,\n  },\n  links: {\n    base: theme.colors.primaryDark,\n    hover: theme.colors.primaryDark,\n    active: theme.colors.primaryDark,\n    visited: theme.colors.primaryDark,\n  },\n}\n\nclass App extends React.Component {\n\n  public componentDidMount() {\n    renderRebootCss(renderer, baseCssProps)\n  }\n\n  public render() {\n    return (\n      <IndoqaFela renderer={renderer}>\n        <Router history={history}>\n          <ThemeProvider theme={theme}>\n            <Switch>\n              <Route path=\"/\" component={DemoStyleGuide}/>\n            </Switch>\n          </ThemeProvider>\n        </Router>\n      </IndoqaFela>\n    )\n  }\n}\n\nexport default App\n","/* tslint:disable:no-trailing-whitespace */\nimport {IRenderer} from 'fela'\n\nexport const renderResetCss = (renderer: IRenderer) => {\n  const resetCss = `\n  /* http://meyerweb.com/eric/tools/css/reset/ \n     v2.0 | 20110126\n     License: none (public domain)\n  */\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n`\n  renderer.renderStatic(resetCss)\n}\n\n","/* tslint:disable */\nimport {IRenderer, IStyle} from 'fela'\n\ntype CssValue = string | number | undefined\n\nexport interface BaseCssProps {\n  spacing: {\n    space1: CssValue,\n    space2: CssValue,\n  }\n  links: {\n    base: CssValue,\n    hover: CssValue,\n    visited: CssValue,\n    active: CssValue,\n  },\n  fontSizes: {\n    text: CssValue,\n    h1: CssValue,\n    h2: CssValue,\n    h3: CssValue,\n  },\n  fontStyles: {\n    text: IStyle,\n    headline: IStyle,\n  },\n}\n\nexport const renderRebootCss = (renderer: IRenderer, props: BaseCssProps) => {\n  // boxSizing\n  renderer.renderStatic({\n    boxSizing: 'border-box',\n  }, ':root')\n  renderer.renderStatic({\n    boxSizing: 'inherit',\n  }, '*, :before, ::after')\n\n  // use the full height of the browser\n  renderer.renderStatic({\n    height: '100%',\n    margin: 0,\n    textAlign: 'left',\n  }, 'html, body, #app')\n\n  // Bootstrap 4.1.3 Reboot (except boxSizing and links with textDecoration 'underline')\n  const rebootCss = `\n    hr {\n      box-sizing: content-box;\n      height: 0;\n      overflow: visible;\n    }\n    \n    h1, h2, h3, h4, h5, h6 {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n    \n    p {\n      margin-top: 0;\n      margin-bottom: ${props.spacing.space1};\n    }\n    \n    abbr[title],\n    abbr[data-original-title] {\n      text-decoration: underline;\n      -webkit-text-decoration: underline dotted;\n      text-decoration: underline dotted;\n      cursor: help;\n      border-bottom: 0;\n    }\n    \n    address {\n      margin-bottom: ${props.spacing.space1};\n      font-style: normal;\n      line-height: inherit;\n    }\n    \n    ol,\n    ul,\n    dl {\n      margin-top: 0;\n      margin-bottom: ${props.spacing.space1};\n    }\n    \n    ol ol,\n    ul ul,\n    ol ul,\n    ul ol {\n      margin-bottom: 0;\n      padding-left: calc(${props.spacing.space1} + ${props.spacing.space2});\n    }\n    \n    dt {\n      font-weight: 700;\n    }\n    \n    dd {\n      margin-bottom: ${props.spacing.space1};\n      margin-left: 0;\n    }\n    \n    blockquote {\n      margin: 0 0 ${props.spacing.space2};\n    }\n    \n    dfn {\n      font-style: italic;\n    }\n    \n    b,\n    strong {\n      font-weight: bolder;\n    }\n    \n    small {\n      font-size: 80%;\n    }\n    \n    sub,\n    sup {\n      position: relative;\n      font-size: 75%;\n      line-height: 0;\n      vertical-align: baseline;\n    }\n    \n    sub {\n      bottom: -.25em;\n    }\n    \n    sup {\n      top: -.5em;\n    }\n    \n    a {\n      color: ${props.links.base};\n      text-decoration: underline;\n      background-color: transparent;\n      -webkit-text-decoration-skip: objects;\n    }\n    \n    a:hover {\n      color: ${props.links.hover};\n      text-decoration: underline;\n    }\n\n    a:active {\n      color: ${props.links.active};\n      text-decoration: underline;\n    }\n    \n    a:visited {\n      color: ${props.links.visited};\n      text-decoration: underline;\n    }\n    \n    a:not([href]):not([tabindex]) {\n      color: inherit;\n      text-decoration: none;\n    }\n    \n    a:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus {\n      color: inherit;\n    }\n    \n    a:not([href]):not([tabindex]):focus {\n      outline: 0;\n    }\n    \n    pre,\n    code,\n    kbd,\n    samp {\n      font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n      font-size: 1em;\n    }\n    \n    pre {\n      margin-top: 0;\n      margin-bottom: ${props.spacing.space1};\n      overflow: auto;\n      -ms-overflow-style: scrollbar;\n    }\n    \n    figure {\n      margin: 0 0 ${props.spacing.space2};\n    }\n    \n    img {\n      vertical-align: middle;\n      border-style: none;\n    }\n    \n    svg {\n      overflow: hidden;\n      vertical-align: middle;\n    }\n    \n    table {\n      border-collapse: collapse;\n    }\n    \n    caption {\n      padding-top: ${props.spacing.space1};\n      padding-bottom: ${props.spacing.space1};\n      color: #6c757d;\n      text-align: left;\n      caption-side: bottom;\n    }\n    \n    th {\n      text-align: inherit;\n    }\n    \n    label {\n      display: inline-block;\n      margin-bottom: ${props.spacing.space1};\n    }\n    \n    button {\n      border-radius: 0;\n    }\n    \n    button:focus {\n      outline: 1px dotted;\n      outline: 5px auto -webkit-focus-ring-color;\n    }\n    \n    input,\n    button,\n    select,\n    optgroup,\n    textarea {\n      margin: 0;\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n    }\n    \n    button,\n    input {\n      overflow: visible;\n    }\n    \n    button,\n    select {\n      text-transform: none;\n    }\n    \n    button,\n    html [type=\"button\"],\n    [type=\"reset\"],\n    [type=\"submit\"] {\n      -webkit-appearance: button;\n    }\n    \n    button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n    \n    input[type=\"radio\"],\n    input[type=\"checkbox\"] {\n      box-sizing: border-box;\n      padding: 0;\n    }\n    \n    input[type=\"date\"],\n    input[type=\"time\"],\n    input[type=\"datetime-local\"],\n    input[type=\"month\"] {\n      -webkit-appearance: listbox;\n    }\n    \n    textarea {\n      overflow: auto;\n      resize: vertical;\n    }\n    \n    fieldset {\n      min-width: 0;\n      padding: 0;\n      margin: 0;\n      border: 0;\n    }\n    \n    legend {\n      display: block;\n      width: 100%;\n      max-width: 100%;\n      padding: 0;\n      margin-bottom: ${props.spacing.space1};\n      font-size: ${props.fontSizes.text};\n      line-height: inherit;\n      color: inherit;\n      white-space: normal;\n    }\n    \n    progress {\n      vertical-align: baseline;\n    }\n    \n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n      height: auto;\n    }\n    \n    [type=\"search\"] {\n      outline-offset: -2px;\n      -webkit-appearance: none;\n    }\n    \n    [type=\"search\"]::-webkit-search-cancel-button,\n    [type=\"search\"]::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n    \n    ::-webkit-file-upload-button {\n      font: inherit;\n      -webkit-appearance: button;\n    }\n    \n    output {\n      display: inline-block;\n    }\n    \n    summary {\n      display: list-item;\n      cursor: pointer;\n    }\n    \n    template {\n      display: none;\n    }\n    \n    [hidden] {\n      display: none !important;\n    }\n  `\n  renderer.renderStatic(rebootCss)\n\n  // set the base fonts for body and headlines\n  renderer.renderStatic({\n    ...props.fontStyles.text,\n  }, 'body')\n  renderer.renderStatic({\n    ...props.fontStyles.headline,\n  }, 'h1, h2, h3, h4, h5, h6')\n  renderer.renderStatic({\n    marginTop: props.spacing.space2,\n  }, '* + h1, * + h2, * + h3, * + h4, * + h5, * + h6')\n  renderer.renderStatic({\n    fontSize: props.fontSizes.h1,\n  }, 'h1')\n  renderer.renderStatic({\n    fontSize: props.fontSizes.h2,\n  }, 'h2')\n  renderer.renderStatic({\n    fontSize: props.fontSizes.h3,\n  }, 'h3')\n\n  // render lists\n  renderer.renderStatic({\n    listStylePosition: 'outside',\n  }, 'ul, ol')\n  renderer.renderStatic({\n    listStyleType: 'circle',\n  }, 'ul ul, ol ul')\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport App from './app/App'\n\nconst rootEl = document.getElementById('app')\n\nReactDOM.render(<App/>, rootEl)\n\nif (module.hot) {\n  module.hot.accept('./app/App', () => {\n    const NextApp = require('./app/App.tsx').default\n    ReactDOM.render(<NextApp/>, rootEl)\n  })\n}\n"],"sourceRoot":""}