{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/AddressesSubForm.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/AddressesSubForm.tsx","mtime":1548518044984},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import { FieldArray } from 'formik';\nimport { Box, Flex, Text } from 'indoqa-react-fela';\nimport * as React from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport FormRow from '../../commons/components/molecules/FormRow';\nimport Optional from '../../commons/components/utils/Optional';\nimport { createNewAddress } from '../store/forms.factory';\nvar renderAddressHeader = function (arrayHelpers, count, index, t) { return (React.createElement(Box, { grow: 1 },\n    React.createElement(Text, { mr: 1 },\n        t('address'),\n        \" \",\n        index + 1),\n    React.createElement(\"button\", { type: \"button\", onClick: function () { return arrayHelpers.remove(index); } }, \"-\"),\n    React.createElement(Optional, { test: index > 0 },\n        React.createElement(\"button\", { type: \"button\", onClick: function () { return arrayHelpers.move(index, index - 1); } }, \"\\u2191\")),\n    React.createElement(Optional, { test: index < count - 1 },\n        React.createElement(\"button\", { type: \"button\", onClick: function () { return arrayHelpers.move(index, index + 1); } }, \"\\u2193\")))); };\nvar renderAddressForm = function (arrayHelpers, addresses, errors, touched, address, index, t) { return (React.createElement(Flex, { key: index, mt: 2 },\n    renderAddressHeader(arrayHelpers, addresses.length, index, t),\n    React.createElement(FormRow, { name: \"addresses.\" + index + \".street\", label: t('street'), errors: errors, touched: touched }),\n    React.createElement(FormRow, { name: \"addresses.\" + index + \".city\", label: t('city'), errors: errors, touched: touched }),\n    React.createElement(FormRow, { name: \"addresses.\" + index + \".zipCode\", label: t('zipCode'), errors: errors, touched: touched }),\n    React.createElement(FormRow, { name: \"addresses.\" + index + \".country\", label: t('country'), errors: errors, touched: touched }))); };\nvar renderForms = function (arrayHelpers, addresses, errors, touched, t) { return (React.createElement(Optional, { test: addresses && addresses.length > 0 }, addresses.map(function (address, index) { return (renderAddressForm(arrayHelpers, addresses, errors, touched, address, index, t)); }))); };\nvar renderHeader = function (arrayHelpers, t) { return (React.createElement(Box, null,\n    React.createElement(Box, null,\n        React.createElement(Text, { mr: 1 }, t('addresses')),\n        React.createElement(\"button\", { type: \"button\", onClick: function () { return arrayHelpers.push(createNewAddress()); } }, \"+\")))); };\nvar AddressesSubForm = function (_a) {\n    var addresses = _a.addresses, errors = _a.errors, touched = _a.touched, t = _a.t;\n    return (React.createElement(FieldArray, { name: \"addresses\", render: function (arrayHelpers) { return (React.createElement(Box, { mt: 2 },\n            renderHeader(arrayHelpers, t),\n            renderForms(arrayHelpers, addresses, errors, touched, t))); } }));\n};\nexport default withNamespaces('forms')(AddressesSubForm);\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/AddressesSubForm.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/AddressesSubForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import {ArrayHelpers, FieldArray, FormikErrors, FormikTouched} from 'formik'\nimport i18next from 'i18next'\nimport {Box, Flex, Text} from 'indoqa-react-fela'\nimport * as React from 'react'\nimport {WithNamespaces, withNamespaces} from 'react-i18next'\nimport FormRow from '../../commons/components/molecules/FormRow'\n\nimport Optional from '../../commons/components/utils/Optional'\nimport {createNewAddress} from '../store/forms.factory'\nimport {Address} from '../store/forms.types'\n\nconst renderAddressHeader = (\n  arrayHelpers: ArrayHelpers,\n  count: number,\n  index: number,\n  t: i18next.TranslationFunction,\n) =>  (\n  <Box grow={1}>\n    <Text mr={1}>{t('address')} {index + 1}</Text>\n    <button type=\"button\" onClick={() => arrayHelpers.remove(index)}>-</button>\n    <Optional test={index > 0}>\n      <button type=\"button\" onClick={() => arrayHelpers.move(index, index - 1)}>↑</button>\n    </Optional>\n    <Optional test={index < count - 1}>\n      <button type=\"button\" onClick={() => arrayHelpers.move(index, index + 1)}>↓</button>\n    </Optional>\n  </Box>\n)\n\nconst renderAddressForm = (\n  arrayHelpers: ArrayHelpers,\n  addresses: Address[],\n  errors: FormikErrors<{}>,\n  touched: FormikTouched<{}>,\n  address: Address,\n  index: number,\n  t: i18next.TranslationFunction,\n) => (\n  <Flex key={index} mt={2}>\n    {renderAddressHeader(arrayHelpers, addresses.length, index, t)}\n\n    <FormRow name={`addresses.${index}.street`} label={t('street')} errors={errors} touched={touched}/>\n    <FormRow name={`addresses.${index}.city`} label={t('city')} errors={errors} touched={touched}/>\n    <FormRow name={`addresses.${index}.zipCode`} label={t('zipCode')} errors={errors} touched={touched}/>\n    <FormRow name={`addresses.${index}.country`} label={t('country')} errors={errors} touched={touched}/>\n  </Flex>\n)\n\nconst renderForms = (\n  arrayHelpers: ArrayHelpers,\n  addresses: Address[],\n  errors: FormikErrors<{}>,\n  touched: FormikTouched<{}>,\n  t: i18next.TranslationFunction,\n) => (\n  <Optional test={addresses && addresses.length > 0}>\n    {\n      addresses.map((address, index) => (\n        renderAddressForm(arrayHelpers, addresses, errors, touched, address, index, t)\n      ))\n    }\n  </Optional>\n)\n\nconst renderHeader = (arrayHelpers: ArrayHelpers, t: i18next.TranslationFunction) => (\n  <Box>\n    <Box>\n      <Text mr={1}>{t('addresses')}</Text>\n      <button type=\"button\" onClick={() => arrayHelpers.push(createNewAddress())}>+</button>\n    </Box>\n  </Box>\n)\n\nexport interface AddressFormProps {\n  addresses: Address[],\n  errors: FormikErrors<{}>,\n  touched: FormikTouched<{}>,\n}\n\nconst AddressesSubForm: React.FunctionComponent<AddressFormProps & WithNamespaces> =\n  ({addresses, errors, touched, t}) => (\n  <FieldArray\n    name=\"addresses\"\n    render={(arrayHelpers) => (\n      <Box mt={2}>\n        {renderHeader(arrayHelpers, t)}\n        {renderForms(arrayHelpers, addresses, errors, touched, t)}\n      </Box>\n    )}\n  />\n)\n\nexport default withNamespaces('forms')(AddressesSubForm)\n"]}]}