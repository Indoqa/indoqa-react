{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Col.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Col.tsx","mtime":1549216589910},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { FelaComponent } from 'react-fela';\nimport { GridContext } from './GridContext';\nimport { testGridContext } from './testGridContext';\nimport { addUnitIfNeeded } from './utils';\nexport var GRID_SIZE = 12;\nvar Col = (function (_super) {\n    tslib_1.__extends(Col, _super);\n    function Col() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Col.prototype.render = function () {\n        var internalProps = this.props;\n        var children = internalProps.children, rowBreak = internalProps.rowBreak, marginTop = internalProps.marginTop, size = internalProps.size;\n        var effectiveSize = size ? size : 12;\n        var colStyle = function (_a) {\n            var spacing = _a.spacing;\n            var marginRight = rowBreak ? '0px' : spacing;\n            var spacingWithUnit = addUnitIfNeeded(spacing);\n            var availableSpace = \"(100% - \" + spacingWithUnit + \" * \" + (GRID_SIZE - 1) + \")\";\n            var coveredSpacing = spacingWithUnit + \" * \" + (effectiveSize - 1);\n            return ({\n                width: \"calc(\" + availableSpace + \" / \" + GRID_SIZE + \" * \" + effectiveSize + \" + \" + coveredSpacing + \")\",\n                marginRight: marginRight,\n                marginTop: marginTop,\n            });\n        };\n        return (React.createElement(GridContext.Consumer, null, function (_a) {\n            var spacing = _a.spacing;\n            var child = (React.createElement(FelaComponent, { style: colStyle, spacing: spacing }, children));\n            return testGridContext(spacing, child);\n        }));\n    };\n    Col.defaultProps = {\n        rowBreak: false,\n        size: GRID_SIZE,\n        marginTop: 0,\n    };\n    return Col;\n}(React.Component));\nexport { Col };\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Col.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Col.tsx"],"names":[],"mappings":";AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAC,aAAa,EAAgB,MAAM,YAAY,CAAA;AAEvD,OAAO,EAAC,WAAW,EAAC,MAAM,eAAe,CAAA;AACzC,OAAO,EAAC,eAAe,EAAC,MAAM,mBAAmB,CAAA;AACjD,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAA;AAIvC,MAAM,CAAC,IAAM,SAAS,GAAS,EAAE,CAAA;AAgBjC;IAAyB,+BAAsB;IAA/C;;IAqCA,CAAC;IA7BQ,oBAAM,GAAb;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,KAA4B,CAAA;QAChD,IAAA,iCAAQ,EAAE,iCAAQ,EAAE,mCAAS,EAAE,yBAAI,CAAiB;QAC3D,IAAM,aAAa,GAAW,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA;QAC9C,IAAM,QAAQ,GAAgD,UAAC,EAAS;gBAAR,oBAAO;YACrE,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAA;YAC9C,IAAM,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,CAAA;YAChD,IAAM,cAAc,GAAG,aAAW,eAAe,YAAM,SAAS,GAAG,CAAC,OAAG,CAAA;YACvE,IAAM,cAAc,GAAM,eAAe,YAAM,aAAa,GAAG,CAAC,CAAE,CAAA;YAClE,OAAO,CAAC;gBAEN,KAAK,EAAE,UAAQ,cAAc,WAAM,SAAS,WAAM,aAAa,WAAM,cAAc,MAAG;gBACtF,WAAW,aAAA;gBACX,SAAS,WAAA;aACV,CAAC,CAAA;QACJ,CAAC,CAAA;QACD,OAAO,CACL,oBAAC,WAAW,CAAC,QAAQ,QAClB,UAAC,EAAS;gBAAR,oBAAO;YACR,IAAM,KAAK,GAAG,CACZ,oBAAC,aAAa,IAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,IAC7C,QAAQ,CACK,CACjB,CAAA;YACD,OAAO,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;QACxC,CAAC,CACoB,CACxB,CAAA;IACH,CAAC;IAlCa,gBAAY,GAAG;QAC3B,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,CAAC;KACb,CAAA;IA+BH,UAAC;CAAA,AArCD,CAAyB,KAAK,CAAC,SAAS,GAqCvC;SArCY,GAAG","sourcesContent":["import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\nimport {BaseTheme} from '../../baseTheme'\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\nimport {addUnitIfNeeded} from './utils'\n\ntype Size = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\n\nexport const GRID_SIZE: Size = 12\n\ninterface Props {\n  rowBreak?: boolean,\n}\n\ninterface ColManipulatedProps extends Props {\n  marginTop?: string | number,\n  size?: Size,\n  children: React.ReactNode\n}\n\ninterface RowContainerProps extends Props {\n  spacing?: number | string,\n}\n\nexport class Col extends React.Component<Props> {\n\n  public static defaultProps = {\n    rowBreak: false,\n    size: GRID_SIZE,\n    marginTop: 0,\n  }\n\n  public render() {\n    const internalProps = this.props as ColManipulatedProps\n    const {children, rowBreak, marginTop, size} = internalProps\n    const effectiveSize: number = size ? size : 12\n    const colStyle: StyleFunction<BaseTheme, RowContainerProps> = ({spacing}): IStyle => {\n      const marginRight = rowBreak ? '0px' : spacing\n      const spacingWithUnit = addUnitIfNeeded(spacing)\n      const availableSpace = `(100% - ${spacingWithUnit} * ${GRID_SIZE - 1})`\n      const coveredSpacing = `${spacingWithUnit} * ${effectiveSize - 1}`\n      return ({\n        // evenly distribute the full with considering the spacing:\n        width: `calc(${availableSpace} / ${GRID_SIZE} * ${effectiveSize} + ${coveredSpacing})`,\n        marginRight,\n        marginTop,\n      })\n    }\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <FelaComponent style={colStyle} spacing={spacing}>\n              {children}\n            </FelaComponent>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n"]}]}