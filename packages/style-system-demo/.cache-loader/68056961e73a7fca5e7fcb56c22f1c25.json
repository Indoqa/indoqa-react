{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/app/rootEpic.ts","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/app/rootEpic.ts","mtime":1549207277728},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import { combineEpics, ofType } from 'redux-observable';\nimport { ajax } from 'rxjs/ajax';\nimport { takeUntil } from 'rxjs/operators';\nimport history from './history';\nimport time from '../time/store/time.epics';\nimport words from '../words/store/words.epics';\nimport forms from '../forms/store/forms.epics';\nexport var services = {\n    ajax: ajax,\n    scheduler: undefined,\n    history: history,\n};\nvar combinedEpics = combineEpics.apply(void 0, forms.concat(time, words));\nvar rootEpic = function (action$, state$) {\n    return combinedEpics(action$, state$, services).pipe(takeUntil(action$.pipe(ofType('END'))));\n};\nexport default rootEpic;\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/app/rootEpic.ts","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/app/rootEpic.ts"],"names":[],"mappings":"AAAA,OAAO,EAAoB,YAAY,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAA;AACxE,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAA;AAC9B,OAAO,EAAC,SAAS,EAAC,MAAM,gBAAgB,CAAA;AAExC,OAAO,OAAO,MAAM,WAAW,CAAA;AAE/B,OAAO,IAAI,MAAM,0BAA0B,CAAA;AAC3C,OAAO,KAAK,MAAM,4BAA4B,CAAA;AAC9C,OAAO,KAAK,MAAM,4BAA4B,CAAA;AAE9C,MAAM,CAAC,IAAM,QAAQ,GAAG;IACtB,IAAI,MAAA;IACJ,SAAS,EAAE,SAAS;IACpB,OAAO,SAAA;CACR,CAAA;AAED,IAAM,aAAa,GAAG,YAAY,eAC7B,KAAK,QACL,IAAI,EACJ,KAAK,EACT,CAAA;AAED,IAAM,QAAQ,GAAG,UAAC,OAA4C,EAAE,MAAuB;IACrF,OAAO,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CAClD,SAAS,CAAC,OAAO,CAAC,IAAI,CACpB,MAAM,CAAC,KAAK,CAAC,CACd,CAAC,CACH,CAAA;AACH,CAAC,CAAA;AAED,eAAe,QAAQ,CAAA","sourcesContent":["import {ActionsObservable, combineEpics, ofType} from 'redux-observable'\nimport {ajax} from 'rxjs/ajax'\nimport {takeUntil} from 'rxjs/operators'\nimport * as Types from 'Types'\nimport history from './history'\n\nimport time from '../time/store/time.epics'\nimport words from '../words/store/words.epics'\nimport forms from '../forms/store/forms.epics'\n\nexport const services = {\n  ajax,\n  scheduler: undefined,\n  history,\n}\n\nconst combinedEpics = combineEpics(\n  ...forms,\n  ...time,\n  ...words,\n)\n\nconst rootEpic = (action$: ActionsObservable<Types.RootAction>, state$: Types.RootState) => {\n  return combinedEpics(action$, state$, services).pipe(\n    takeUntil(action$.pipe(\n      ofType('END'),\n    )),\n  )\n}\n\nexport default rootEpic\n"]}]}