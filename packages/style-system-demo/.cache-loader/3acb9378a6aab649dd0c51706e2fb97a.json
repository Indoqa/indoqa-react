{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Panel.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Panel.tsx","mtime":1548956172874},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { FelaComponent } from 'react-fela';\nimport { createFontCSSProps, createPaddingCSSProps, createStylingCSSProps, mergeThemedStyles } from '../base';\nimport { createFlexContainerCSSStyle } from '../Flex';\nimport { GridContext } from './GridContext';\nimport { testGridContext } from './testGridContext';\nimport { addUnitIfNeeded } from './utils';\nvar DEFAULT_WIDTH = '0%';\nvar isDefaultWidth = function (width) {\n    return !width || width === DEFAULT_WIDTH || width === 0 || width === '0';\n};\nvar calcBasis = function (spacing, size, width) {\n    if (width && !isDefaultWidth(width)) {\n        return addUnitIfNeeded(width);\n    }\n    if (!size) {\n        return 'auto';\n    }\n    return \"calc(\" + addUnitIfNeeded(spacing) + \" * \" + (size - 1) + \")\";\n};\nvar PanelContainer = (function (_super) {\n    tslib_1.__extends(PanelContainer, _super);\n    function PanelContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PanelContainer.prototype.render = function () {\n        var panelStyle = function (_a) {\n            var width = _a.width, size = _a.size, spacing = _a.spacing, otherProps = tslib_1.__rest(_a, [\"width\", \"size\", \"spacing\"]);\n            return (tslib_1.__assign({}, createPaddingCSSProps(otherProps), createFontCSSProps(otherProps), createStylingCSSProps(otherProps), createFlexContainerCSSStyle(otherProps), { flexGrow: 1, flexShrink: 0, width: '100%', height: 'auto', overflow: 'hidden', marginTop: spacing, '@media (min-width: 768px)': {\n                    width: '0',\n                    flex: (isDefaultWidth(width) ? size : 0) + \" 0 \" + calcBasis(spacing, size, width),\n                    ':not(:last-child)': {\n                        paddingRight: spacing,\n                    },\n                } }));\n        };\n        var _a = this.props, style = _a.style, children = _a.children, otherProps = tslib_1.__rest(_a, [\"style\", \"children\"]);\n        var styles = mergeThemedStyles(panelStyle, style);\n        return (React.createElement(FelaComponent, tslib_1.__assign({ style: styles }, otherProps), children));\n    };\n    return PanelContainer;\n}(React.Component));\nvar Panel = (function (_super) {\n    tslib_1.__extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Panel.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(GridContext.Consumer, null, function (_a) {\n            var spacing = _a.spacing;\n            var child = (React.createElement(PanelContainer, tslib_1.__assign({ spacing: spacing }, _this.props), _this.props.children));\n            return testGridContext(spacing, child);\n        }));\n    };\n    Panel.defaultProps = {\n        size: 1,\n        width: DEFAULT_WIDTH,\n    };\n    return Panel;\n}(React.Component));\nexport { Panel };\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Panel.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system/src/components/grid/Panel.tsx"],"names":[],"mappings":"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","sourcesContent":["import {IStyle} from 'fela'\nimport * as React from 'react'\nimport {CSSProperties} from 'react'\nimport {FelaComponent, StyleFunction} from 'react-fela'\n\nimport {BaseTheme} from '../../baseTheme'\nimport {\n  createFontCSSProps,\n  createPaddingCSSProps,\n  createStylingCSSProps,\n  FlexContainerProps,\n  FontProps,\n  mergeThemedStyles,\n  PaddingProps,\n  StylingProps,\n  WithStyle\n} from '../base'\nimport {createFlexContainerCSSStyle} from '../Flex'\nimport {GridContext} from './GridContext'\nimport {testGridContext} from './testGridContext'\nimport {addUnitIfNeeded} from './utils'\n\ninterface Props<T extends BaseTheme> extends WithStyle<T>, PaddingProps, StylingProps, FontProps, FlexContainerProps {\n  size?: number,\n  width?: string | number,\n}\n\ninterface PanelContainerProps<T extends BaseTheme> extends Props<T> {\n  spacing?: number | string,\n}\n\ninterface PanelTabletStyle extends IStyle {\n  ':not(:last-child)': CSSProperties,\n}\n\ninterface PanelStyle extends IStyle {\n  '@media (min-width: 768px)': PanelTabletStyle,\n}\n\nconst DEFAULT_WIDTH = '0%'\n\nconst isDefaultWidth = (width: string | number | undefined) => {\n  return !width || width === DEFAULT_WIDTH || width === 0 || width === '0'\n}\n\nconst calcBasis = (\n  spacing: number | string | undefined,\n  size: number | undefined,\n  width: number | string | undefined) => {\n  if (width && !isDefaultWidth(width)) {\n    return addUnitIfNeeded(width)\n  }\n  // if size is zero, give the panel the width it needs,\n  if (!size) {\n    return 'auto'\n  }\n  // if there is no explicit width, add the \"internal\" spacing widths to flex basis\n  return `calc(${addUnitIfNeeded(spacing)} * ${size - 1})`\n}\n\nclass PanelContainer<T extends BaseTheme> extends React.Component<PanelContainerProps<T>> {\n\n  public render() {\n    const panelStyle: StyleFunction<BaseTheme, PanelContainerProps<T>> = ({width, size, spacing, ...otherProps}): PanelStyle => ({\n      ...createPaddingCSSProps(otherProps),\n      ...createFontCSSProps(otherProps),\n      ...createStylingCSSProps(otherProps),\n      ...createFlexContainerCSSStyle(otherProps),\n      // mobile is always full width (flexGrow, flexShrink, width)\n      flexGrow: 1,\n      flexShrink: 0,\n      width: '100%',\n      height: 'auto',\n      overflow: 'hidden',\n      marginTop: spacing,\n      '@media (min-width: 768px)': {\n        // either set the width OR participate in the flex grow calculation\n        width: '0',\n        flex: `${isDefaultWidth(width) ? size : 0} 0 ${calcBasis(spacing, size, width)}`,\n        ':not(:last-child)': {\n          paddingRight: spacing,\n        },\n      },\n    })\n    const {style, children, ...otherProps} = this.props\n    const styles = mergeThemedStyles<T, PanelContainerProps<T>>(panelStyle, style)\n    return (\n      <FelaComponent<T> style={styles} {...otherProps}>\n        {children}\n      </FelaComponent>\n    )\n  }\n}\n\nexport class Panel<T extends BaseTheme> extends React.Component<Props<T>> {\n\n  public static defaultProps = {\n    size: 1,\n    width: DEFAULT_WIDTH,\n  }\n\n  public render() {\n    return (\n      <GridContext.Consumer>\n        {({spacing}) => {\n          const child = (\n            <PanelContainer spacing={spacing} {...this.props}>\n              {this.props.children}\n            </PanelContainer>\n          )\n          return testGridContext(spacing, child)\n        }}\n      </GridContext.Consumer>\n    )\n  }\n}\n"]}]}