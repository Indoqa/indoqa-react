{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/indoqa-style-system-demo/src/main/style-guide/typography/TypographyPanel.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/indoqa-style-system-demo/src/main/style-guide/typography/TypographyPanel.tsx","mtime":1549207277832},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import { Flex } from 'indoqa-react-fela';\nimport * as React from 'react';\nimport { withSGTheme } from '../sgtheme/withSGTheme';\nimport FontMixPanel from './FontMixPanel';\nimport HeadlineFontStylePanel from './HeadlineFontPanel';\nimport TextFontStylePanel from './TextFontPanel';\nvar renderTextFont = function (font) {\n    return (React.createElement(TextFontStylePanel, { key: font.name, name: font.name, fontStyles: font.fontStyle }));\n};\nvar renderHeadlineFont = function (font, fontSizes) {\n    return (React.createElement(HeadlineFontStylePanel, { key: font.name, name: font.name, fontStyles: font.fontStyle, fontSizes: fontSizes }));\n};\nvar renderFontMixes = function (fontMix, fontSizes, textFontSize) {\n    return (React.createElement(FontMixPanel, { key: fontMix.name, fontMix: fontMix, fontSizes: fontSizes, textFontSize: textFontSize }));\n};\nvar TypographyPanel = function (_a) {\n    var textFonts = _a.textFonts, headlineFonts = _a.headlineFonts, fontMixes = _a.fontMixes, fontSizes = _a.fontSizes, textFontSize = _a.textFontSize;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Flex, null, headlineFonts.map(function (font) { return renderHeadlineFont(font, fontSizes); })),\n        React.createElement(Flex, null, textFonts.map(function (font) { return renderTextFont(font); })),\n        React.createElement(Flex, null, fontMixes.map(function (fontMix) { return renderFontMixes(fontMix, fontSizes, textFontSize); }))));\n};\nexport default withSGTheme(TypographyPanel);\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/indoqa-style-system-demo/src/main/style-guide/typography/TypographyPanel.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/indoqa-style-system-demo/src/main/style-guide/typography/TypographyPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,mBAAmB,CAAA;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAc,WAAW,EAAC,MAAM,wBAAwB,CAAA;AAE/D,OAAO,YAAY,MAAM,gBAAgB,CAAA;AACzC,OAAO,sBAAsB,MAAM,qBAAqB,CAAA;AACxD,OAAO,kBAAkB,MAAM,iBAAiB,CAAA;AAUhD,IAAM,cAAc,GAAG,UAAC,IAAU;IAChC,OAAO,CACL,oBAAC,kBAAkB,IACjB,GAAG,EAAE,IAAI,CAAC,IAAI,EACd,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,UAAU,EAAE,IAAI,CAAC,SAAS,GAC1B,CACH,CAAA;AACH,CAAC,CAAA;AAED,IAAM,kBAAkB,GAAG,UAAC,IAAU,EAAE,SAAoB;IAC1D,OAAO,CACL,oBAAC,sBAAsB,IACrB,GAAG,EAAE,IAAI,CAAC,IAAI,EACd,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,UAAU,EAAE,IAAI,CAAC,SAAS,EAC1B,SAAS,EAAE,SAAS,GACpB,CACH,CAAA;AACH,CAAC,CAAA;AAED,IAAM,eAAe,GAAG,UAAC,OAAgB,EAAE,SAAoB,EAAE,YAAsB;IACrF,OAAO,CACL,oBAAC,YAAY,IACX,GAAG,EAAE,OAAO,CAAC,IAAI,EACjB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,YAAY,GAC1B,CACH,CAAA;AACH,CAAC,CAAA;AAED,IAAM,eAAe,GAAoB,UAAC,EAA8D;QAA7D,wBAAS,EAAE,gCAAa,EAAE,wBAAS,EAAE,wBAAS,EAAE,8BAAY;IACrG,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;QACb,oBAAC,IAAI,QACF,aAAa,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAnC,CAAmC,CAAC,CAC5D;QACP,oBAAC,IAAI,QACF,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,cAAc,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC,CACzC;QACP,oBAAC,IAAI,QACF,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,OAAA,eAAe,CAAC,OAAO,EAAE,SAAS,EAAE,YAAY,CAAC,EAAjD,CAAiD,CAAC,CACzE,CACQ,CAClB,CAAA;AACH,CAAC,CAAA;AAED,eAAe,WAAW,CAAC,eAAe,CAAC,CAAA","sourcesContent":["import {Flex} from 'indoqa-react-fela'\nimport * as React from 'react'\nimport {WithSGTheme, withSGTheme} from '../sgtheme/withSGTheme'\nimport {Font, FontMix, FontSize, FontSizes} from '../types'\nimport FontMixPanel from './FontMixPanel'\nimport HeadlineFontStylePanel from './HeadlineFontPanel'\nimport TextFontStylePanel from './TextFontPanel'\n\ninterface Props extends WithSGTheme {\n  textFonts: Font[],\n  headlineFonts: Font[],\n  fontSizes: FontSizes,\n  fontMixes: FontMix[],\n  textFontSize: FontSize,\n}\n\nconst renderTextFont = (font: Font) => {\n  return (\n    <TextFontStylePanel\n      key={font.name}\n      name={font.name}\n      fontStyles={font.fontStyle}\n    />\n  )\n}\n\nconst renderHeadlineFont = (font: Font, fontSizes: FontSizes) => {\n  return (\n    <HeadlineFontStylePanel\n      key={font.name}\n      name={font.name}\n      fontStyles={font.fontStyle}\n      fontSizes={fontSizes}\n    />\n  )\n}\n\nconst renderFontMixes = (fontMix: FontMix, fontSizes: FontSizes, textFontSize: FontSize) => {\n  return (\n    <FontMixPanel\n      key={fontMix.name}\n      fontMix={fontMix}\n      fontSizes={fontSizes}\n      textFontSize={textFontSize}\n    />\n  )\n}\n\nconst TypographyPanel: React.FC<Props> = ({textFonts, headlineFonts, fontMixes, fontSizes, textFontSize}) => {\n  return (\n    <React.Fragment>\n      <Flex>\n        {headlineFonts.map((font) => renderHeadlineFont(font, fontSizes))}\n      </Flex>\n      <Flex>\n        {textFonts.map((font) => renderTextFont(font))}\n      </Flex>\n      <Flex>\n        {fontMixes.map((fontMix) => renderFontMixes(fontMix, fontSizes, textFontSize))}\n      </Flex>\n    </React.Fragment>\n  )\n}\n\nexport default withSGTheme(TypographyPanel)\n"]}]}