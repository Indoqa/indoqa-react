{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/commons/components/molecules/FormRow.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/commons/components/molecules/FormRow.tsx","mtime":1543618034971},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { createComponent, createComponentWithProxy } from 'react-fela';\nimport { Field, getIn } from 'formik';\nvar Row = createComponent(function () { return ({\n    width: '100%',\n    marginTop: 3,\n    marginBottom: 3,\n}); });\nvar Label = createComponent(function () { return ({\n    display: 'inline-block',\n    width: '100',\n}); }, 'label');\nvar InputField = createComponentWithProxy(function (_a) {\n    var hasError = _a.hasError;\n    return ({\n        borderStyle: 'solid',\n        borderWidth: 1,\n        padding: 4,\n        borderColor: hasError ? 'red' : 'grey',\n        outline: 'none',\n        boxShadow: 'none',\n        transition: 'all 0.30s ease-in-out',\n        ':focus': {\n            boxShadow: '0 0 5px rgba(81, 203, 238, 1)',\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'rgba(81, 203, 238, 1)',\n        },\n    });\n}, 'input');\nvar ErrorMessage = createComponent(function () { return ({\n    color: 'red',\n}); }, 'span');\nvar renderLabel = function (label) {\n    return React.createElement(Label, null, label);\n};\nvar renderField = function (name, hasError) {\n    return (React.createElement(Field, { name: name, render: function (_a) {\n            var field = _a.field;\n            return (React.createElement(InputField, tslib_1.__assign({}, field, { hasError: hasError, autoComplete: \"off\" })));\n        } }));\n};\nvar renderError = function (name, hasError, errors) {\n    if (!hasError) {\n        return null;\n    }\n    return (React.createElement(ErrorMessage, { ml: 1 }, getIn(errors, name)));\n};\nvar FormRow = function (_a) {\n    var name = _a.name, label = _a.label, errors = _a.errors, touched = _a.touched;\n    var hasError = getIn(touched, name) && getIn(errors, name);\n    return (React.createElement(Row, null,\n        renderLabel(label),\n        renderField(name, hasError),\n        renderError(name, hasError, errors)));\n};\nexport default FormRow;\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/commons/components/molecules/FormRow.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/commons/components/molecules/FormRow.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAC,eAAe,EAAE,wBAAwB,EAAC,MAAM,YAAY,CAAA;AACpE,OAAO,EAAC,KAAK,EAA+B,KAAK,EAAC,MAAM,QAAQ,CAAA;AAShE,IAAM,GAAG,GAAG,eAAe,CAAC,cAAM,OAAA,CAAC;IACjC,KAAK,EAAE,MAAM;IACb,SAAS,EAAE,CAAC;IACZ,YAAY,EAAE,CAAC;CAChB,CAAC,EAJgC,CAIhC,CAAC,CAAA;AAEH,IAAM,KAAK,GAAG,eAAe,CAAC,cAAM,OAAA,CAAC;IACnC,OAAO,EAAE,cAAc;IACvB,KAAK,EAAE,KAAK;CACb,CAAC,EAHkC,CAGlC,EAAE,OAAO,CAAC,CAAA;AAEZ,IAAM,UAAU,GAAG,wBAAwB,CAAC,UAAC,EAAU;QAAT,sBAAQ;IAAM,OAAA,CAAC;QAC3D,WAAW,EAAE,OAAO;QACpB,WAAW,EAAE,CAAC;QACd,OAAO,EAAE,CAAC;QACV,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM;QACtC,OAAO,EAAE,MAAM;QACf,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,uBAAuB;QACnC,QAAQ,EAAE;YACR,SAAS,EAAE,+BAA+B;YAC1C,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,OAAO;YACpB,WAAW,EAAE,uBAAuB;SACrC;KACF,CAAC;AAd0D,CAc1D,EAAE,OAAO,CAAC,CAAA;AAEZ,IAAM,YAAY,GAAG,eAAe,CAAC,cAAM,OAAA,CAAC;IAC1C,KAAK,EAAE,KAAK;CACb,CAAC,EAFyC,CAEzC,EAAE,MAAM,CAAQ,CAAA;AAElB,IAAM,WAAW,GAAG,UAAC,KAAa;IAChC,OAAO,oBAAC,KAAK,QAAE,KAAK,CAAS,CAAA;AAC/B,CAAC,CAAA;AAED,IAAM,WAAW,GAAG,UAAC,IAAY,EAAE,QAAiB;IAClD,OAAO,CACL,oBAAC,KAAK,IACJ,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,UAAC,EAAY;gBAAX,gBAAK;YAAW,OAAA,CACxB,oBAAC,UAAU,uBAAK,KAAK,IAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAC,KAAK,IAAG,CACjE;QAFyB,CAEzB,GACD,CACH,CAAA;AACH,CAAC,CAAA;AAED,IAAM,WAAW,GAAG,UAAC,IAAY,EAAE,QAAiB,EAAE,MAAyB;IAC7E,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,IAAI,CAAA;KACZ;IACD,OAAO,CACL,oBAAC,YAAY,IAAC,EAAE,EAAE,CAAC,IAChB,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CACP,CAChB,CAAA;AACH,CAAC,CAAA;AAED,IAAM,OAAO,GAAG,UAAC,EAAqC;QAApC,cAAI,EAAE,gBAAK,EAAE,kBAAM,EAAE,oBAAO;IAC5C,IAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC5D,OAAO,CACL,oBAAC,GAAG;QACD,WAAW,CAAC,KAAK,CAAC;QAClB,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC;QAC3B,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAChC,CACP,CAAA;AACH,CAAC,CAAA;AAED,eAAe,OAAO,CAAA","sourcesContent":["import * as React from 'react'\nimport {createComponent, createComponentWithProxy} from 'react-fela'\nimport {Field, FormikErrors, FormikTouched, getIn} from 'formik'\n\nexport interface Props {\n  name: string,\n  label: string,\n  errors: FormikErrors<{}>,\n  touched: FormikTouched<{}>,\n}\n\nconst Row = createComponent(() => ({\n  width: '100%',\n  marginTop: 3,\n  marginBottom: 3,\n}))\n\nconst Label = createComponent(() => ({\n  display: 'inline-block',\n  width: '100',\n}), 'label')\n\nconst InputField = createComponentWithProxy(({hasError}) => ({\n  borderStyle: 'solid',\n  borderWidth: 1,\n  padding: 4,\n  borderColor: hasError ? 'red' : 'grey',\n  outline: 'none',\n  boxShadow: 'none',\n  transition: 'all 0.30s ease-in-out',\n  ':focus': {\n    boxShadow: '0 0 5px rgba(81, 203, 238, 1)',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: 'rgba(81, 203, 238, 1)',\n  },\n}), 'input')\n\nconst ErrorMessage = createComponent(() => ({\n  color: 'red',\n}), 'span') as any\n\nconst renderLabel = (label: string) => {\n  return <Label>{label}</Label>\n}\n\nconst renderField = (name: string, hasError: boolean) => {\n  return (\n    <Field\n      name={name}\n      render={({field}: any) => (\n        <InputField {...field} hasError={hasError} autoComplete=\"off\" />\n      )}\n    />\n  )\n}\n\nconst renderError = (name: string, hasError: boolean, errors: FormikErrors<any>) => {\n  if (!hasError) {\n    return null\n  }\n  return (\n    <ErrorMessage ml={1}>\n      {getIn(errors, name)}\n    </ErrorMessage>\n  )\n}\n\nconst FormRow = ({name, label, errors, touched}: Props) => {\n  const hasError = getIn(touched, name) && getIn(errors, name)\n  return (\n    <Row>\n      {renderLabel(label)}\n      {renderField(name, hasError)}\n      {renderError(name, hasError, errors)}\n    </Row>\n  )\n}\n\nexport default FormRow\n"]}]}