{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system-demo/src/main/style-guide/DemoStyleGuide.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system-demo/src/main/style-guide/DemoStyleGuide.tsx","mtime":1549219331405},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { withTheme } from 'react-fela';\nimport GridSamples from '../grid/GridSamples';\nimport StyleGuide from './StyleGuide';\nvar DemoStyleGuide = (function (_super) {\n    tslib_1.__extends(DemoStyleGuide, _super);\n    function DemoStyleGuide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DemoStyleGuide.prototype.render = function () {\n        var theme = this.props.theme;\n        var colors = [\n            { name: 'primary', hexCode: theme.colors.primary },\n            { name: 'primary-dark', hexCode: theme.colors.primaryDark },\n            { name: 'primary-light', hexCode: theme.colors.primaryLight },\n            { name: 'text', hexCode: theme.colors.text },\n            { name: 'accent', hexCode: theme.colors.accent },\n            { name: 'secondary-text', hexCode: theme.colors.textSecondary },\n            { name: 'divider', hexCode: theme.colors.divider },\n        ];\n        var textFonts = [\n            { name: 'text', fontStyle: theme.fontStyles.text },\n        ];\n        var headlineFonts = [\n            { name: 'headline', fontStyle: theme.fontStyles.headline },\n        ];\n        var fontSizes = [\n            theme.fontSizes.extraBig,\n            theme.fontSizes.big,\n            theme.fontSizes.text,\n            theme.fontSizes.small,\n        ];\n        var textFontSize = theme.fontSizes.text;\n        var fontMixes = [\n            { name: 'System fonts', textFont: theme.fontStyles.text, headlineFont: theme.fontStyles.headline },\n        ];\n        var atomsGroup = {\n            name: 'Atoms',\n            descriptions: [\n                {\n                    name: 'button',\n                    component: React.createElement(\"button\", null, \"Click me!\"),\n                },\n                {\n                    name: 'button2',\n                    component: React.createElement(\"button\", null, \"Click me again!\"),\n                },\n            ],\n        };\n        var moleculesGroup = {\n            name: 'Molecules',\n            descriptions: [\n                {\n                    name: 'Button',\n                    component: React.createElement(\"button\", null, \"Click me!\"),\n                },\n                {\n                    name: 'Grid',\n                    component: React.createElement(GridSamples, null),\n                },\n            ],\n        };\n        var groups = [atomsGroup, moleculesGroup];\n        return (React.createElement(StyleGuide, { projectName: \"Indoqa Style-System\", description: \"Overview\", textFonts: textFonts, headlineFonts: headlineFonts, fontMixes: fontMixes, fontSizes: fontSizes, textFontSize: textFontSize, colors: colors, groups: groups, mountPath: \"\" }));\n    };\n    return DemoStyleGuide;\n}(React.Component));\nexport default withTheme(DemoStyleGuide);\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system-demo/src/main/style-guide/DemoStyleGuide.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/style-system-demo/src/main/style-guide/DemoStyleGuide.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {withTheme} from 'react-fela'\n\nimport {Theme} from '../app/theme'\nimport GridSamples from '../grid/GridSamples'\nimport StyleGuide from './StyleGuide'\nimport {Color, Font, FontMix, FontSize, FontSizes, Group} from './types'\n\ninterface Props {\n  theme: Theme,\n}\n\nclass DemoStyleGuide extends React.Component<Props> {\n\n  public render() {\n    const {theme} = this.props\n\n    const colors: Color[] = [\n      {name: 'primary', hexCode: theme.colors.primary},\n      {name: 'primary-dark', hexCode: theme.colors.primaryDark},\n      {name: 'primary-light', hexCode: theme.colors.primaryLight},\n      {name: 'text', hexCode: theme.colors.text},\n      {name: 'accent', hexCode: theme.colors.accent},\n      {name: 'secondary-text', hexCode: theme.colors.textSecondary},\n      {name: 'divider', hexCode: theme.colors.divider},\n    ]\n    const textFonts: Font[] = [\n      {name: 'text', fontStyle: theme.fontStyles.text},\n    ]\n\n    const headlineFonts: Font[] = [\n      {name: 'headline', fontStyle: theme.fontStyles.headline},\n    ]\n\n    const fontSizes: FontSizes = [\n      theme.fontSizes.extraBig,\n      theme.fontSizes.big,\n      theme.fontSizes.text,\n      theme.fontSizes.small,\n    ]\n\n    const textFontSize: FontSize = theme.fontSizes.text\n\n    const fontMixes: FontMix[] = [\n      {name: 'System fonts', textFont: theme.fontStyles.text, headlineFont: theme.fontStyles.headline},\n    ]\n\n    const atomsGroup: Group = {\n      name: 'Atoms',\n      descriptions: [\n        {\n          name: 'button',\n          component: <button>Click me!</button>,\n        },\n        {\n          name: 'button2',\n          component: <button>Click me again!</button>,\n        },\n      ],\n    }\n\n    const moleculesGroup: Group = {\n      name: 'Molecules',\n      descriptions: [\n        {\n          name: 'Button',\n          component: <button>Click me!</button>,\n        },\n        {\n          name: 'Grid',\n          component: <GridSamples />,\n        },\n      ],\n    }\n\n    const groups = [atomsGroup, moleculesGroup]\n\n    return (\n      <StyleGuide\n        projectName=\"Indoqa Style-System\"\n        description=\"Overview\"\n        textFonts={textFonts}\n        headlineFonts={headlineFonts}\n        fontMixes={fontMixes}\n        fontSizes={fontSizes}\n        textFontSize={textFontSize}\n        colors={colors}\n        groups={groups}\n        mountPath=\"\"\n        // sgTheme={demoTheme}\n      />\n    )\n  }\n}\n\nexport default withTheme(DemoStyleGuide)\n"]}]}