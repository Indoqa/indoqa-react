{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/upload/components/Uploader.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/upload/components/Uploader.tsx","mtime":1541513453616},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Box } from 'indoqa-react-fela';\nimport * as React from 'react';\nvar INITIAL_STATE = {\n    filename: null,\n    size: null,\n    type: null,\n    data_uri: null,\n};\nvar Uploader = (function (_super) {\n    tslib_1.__extends(Uploader, _super);\n    function Uploader(props) {\n        var _this = _super.call(this, props) || this;\n        _this.inputRef = React.createRef();\n        _this.state = INITIAL_STATE;\n        _this.handleChange = _this.handleChange.bind(_this);\n        _this.reset = _this.reset.bind(_this);\n        _this.renderFileInfo = _this.renderFileInfo.bind(_this);\n        return _this;\n    }\n    Uploader.handleSubmit = function (e) {\n        e.preventDefault();\n    };\n    Uploader.prototype.render = function () {\n        return (React.createElement(Box, null,\n            React.createElement(\"form\", { encType: \"multipart-formdata\", onSubmit: Uploader.handleSubmit },\n                React.createElement(\"input\", { type: \"file\", onChange: this.handleChange, ref: this.inputRef })),\n            React.createElement(\"br\", null),\n            this.renderFileInfo()));\n    };\n    Uploader.prototype.renderFileInfo = function () {\n        var _this = this;\n        if (!this.state.filename) {\n            return null;\n        }\n        return (React.createElement(\"section\", null,\n            React.createElement(\"p\", null,\n                \"Name: \",\n                this.state.filename),\n            React.createElement(\"p\", null,\n                \"Size: \",\n                this.state.size),\n            React.createElement(\"p\", null,\n                \"Mime-type: \",\n                this.state.type),\n            React.createElement(Box, { pt: 1, pb: 1 },\n                React.createElement(\"img\", { src: this.state.data_uri, width: \"200\" })),\n            React.createElement(\"button\", { onClick: function () { return _this.reset(); } }, \"Reset\"),\n            React.createElement(\"br\", null)));\n    };\n    Uploader.prototype.handleChange = function (e) {\n        var _this = this;\n        if (!e.target.files) {\n            return;\n        }\n        var file = e.target.files[0];\n        this.setState({ filename: file.name });\n        this.setState({ size: file.size });\n        this.setState({ type: file.type });\n        var reader = new FileReader();\n        reader.onload = function (upload) {\n            _this.setState({ data_uri: upload.target.result });\n        };\n        reader.readAsDataURL(file);\n    };\n    Uploader.prototype.reset = function () {\n        this.setState(INITIAL_STATE);\n        if (this.inputRef.current) {\n            this.inputRef.current.value = '';\n        }\n    };\n    return Uploader;\n}(React.Component));\nexport default Uploader;\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/upload/components/Uploader.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/upload/components/Uploader.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Box} from 'indoqa-react-fela'\nimport * as React from 'react'\n\ninterface State {\n  filename: string | null,\n  size: number | null,\n  type: string | null,\n  data_uri: string | null,\n}\n\nconst INITIAL_STATE: State = {\n  filename: null,\n  size: null,\n  type: null,\n  data_uri: null,\n}\n\nexport default class Uploader extends React.Component<{}, State> {\n\n  private static handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n  }\n\n  private inputRef = React.createRef<HTMLInputElement>()\n\n  constructor(props: {}) {\n    super(props)\n    this.state = INITIAL_STATE\n    this.handleChange = this.handleChange.bind(this)\n    this.reset = this.reset.bind(this)\n    this.renderFileInfo = this.renderFileInfo.bind(this)\n  }\n\n  public render() {\n    return (\n      <Box>\n        <form encType=\"multipart-formdata\" onSubmit={Uploader.handleSubmit}>\n          <input type=\"file\" onChange={this.handleChange} ref={this.inputRef}/>\n        </form>\n        <br/>\n        {this.renderFileInfo()}\n      </Box>\n    )\n  }\n\n  private renderFileInfo() {\n    if (!this.state.filename) {\n      return null\n    }\n    return (\n      <section>\n        <p>Name: {this.state.filename}</p>\n        <p>Size: {this.state.size}</p>\n        <p>Mime-type: {this.state.type}</p>\n        <Box pt={1} pb={1}>\n          <img src={this.state.data_uri!} width=\"200\"/>\n        </Box>\n        <button onClick={() => this.reset()}>Reset</button>\n        <br/>\n      </section>\n    )\n  }\n\n  private handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    if (!e.target.files) {\n      return\n    }\n    const file: File = e.target.files[0]\n    this.setState({filename: file.name})\n    this.setState({size: file.size})\n    this.setState({type: file.type})\n\n    const reader = new FileReader()\n    reader.onload = (upload: ProgressEvent & {target: {result: string}}) => {\n      this.setState({data_uri: upload.target.result})\n    }\n    reader.readAsDataURL(file)\n  }\n\n  private reset() {\n    this.setState(INITIAL_STATE)\n    if (this.inputRef.current) {\n      this.inputRef.current.value! = ''\n    }\n  }\n}\n"]}]}