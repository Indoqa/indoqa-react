{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/UserForm.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/UserForm.tsx","mtime":1548596241362},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { Form, Formik } from 'formik';\nimport { Box } from 'indoqa-react-fela';\nimport * as React from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport ButtonLink from '../../commons/components/atoms/ButtonLink';\nimport FormRow from '../../commons/components/molecules/FormRow';\nimport AddressesSubForm from './AddressesSubForm';\nvar validationSchema = function (t) {\n    return Yup.object().shape({\n        name: Yup.string().required(),\n        email: Yup.string().required(t('errorMissingEmail')),\n        addresses: Yup.array().of(Yup.object().shape({\n            country: Yup.string().required(),\n            zipCode: Yup.string().required(),\n        })),\n    });\n};\nvar UserForm = (function (_super) {\n    tslib_1.__extends(UserForm, _super);\n    function UserForm() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserForm.prototype.render = function () {\n        var _a = this.props, user = _a.user, cancelUrl = _a.cancelUrl, saveUser = _a.saveUser, t = _a.t;\n        return (React.createElement(Formik, { key: user.id + user.lastModified.toString(), onSubmit: function (values, _a) {\n                var setErrors = _a.setErrors;\n                return saveUser(values, setErrors);\n            }, initialValues: user, validationSchema: validationSchema(t), render: function (_a) {\n                var values = _a.values, errors = _a.errors, touched = _a.touched;\n                return (React.createElement(Form, null,\n                    React.createElement(FormRow, { name: \"name\", label: t('name'), errors: errors, touched: touched }),\n                    React.createElement(FormRow, { name: \"email\", label: t('email'), errors: errors, touched: touched }),\n                    React.createElement(AddressesSubForm, { addresses: values.addresses, errors: errors, touched: touched }),\n                    React.createElement(Box, { mt: 2 },\n                        React.createElement(ButtonLink, null,\n                            React.createElement(Link, { to: cancelUrl }, t('cancel'))),\n                        React.createElement(\"button\", { type: \"submit\" }, t('save')))));\n            } }));\n    };\n    return UserForm;\n}(React.Component));\nexport default withNamespaces('forms')(UserForm);\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/UserForm.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/forms/components/UserForm.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAC,IAAI,EAAE,MAAM,EAAc,MAAM,QAAQ,CAAA;AAEhD,OAAO,EAAC,GAAG,EAAC,MAAM,mBAAmB,CAAA;AACrC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAiB,cAAc,EAAC,MAAM,eAAe,CAAA;AAC5D,OAAO,EAAC,IAAI,EAAC,MAAM,kBAAkB,CAAA;AACrC,OAAO,KAAK,GAAG,MAAM,KAAK,CAAA;AAC1B,OAAO,UAAU,MAAM,2CAA2C,CAAA;AAClE,OAAO,OAAO,MAAM,4CAA4C,CAAA;AAGhE,OAAO,gBAAgB,MAAM,oBAAoB,CAAA;AAEjD,IAAM,gBAAgB,GAAG,UAAC,CAA8B;IACtD,OAAA,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;QACjB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;QACpD,SAAS,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;YAC3C,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;YAChC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;SACjC,CAAC,CAAC;KACJ,CAAC;AAPF,CAOE,CAAA;AAQJ;IAAuB,oCAAsB;IAA7C;;IA4BA,CAAC;IA1BQ,yBAAM,GAAb;QACQ,IAAA,eAA2C,EAA1C,cAAI,EAAE,wBAAS,EAAE,sBAAQ,EAAE,QAAe,CAAA;QACjD,OAAO,CACL,oBAAC,MAAM,IACL,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAC3C,QAAQ,EAAE,UAAC,MAAM,EAAE,EAAW;oBAAV,wBAAS;gBAAM,OAAA,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC;YAA3B,CAA2B,EAC9D,aAAa,EAAE,IAAI,EACnB,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC,EACrC,MAAM,EAAE,UAAC,EAA4C;oBAA3C,kBAAM,EAAE,kBAAM,EAAE,oBAAO;gBAC/B,OAAO,CACL,oBAAC,IAAI;oBACH,oBAAC,OAAO,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,GAAG;oBAC1E,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,EAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,GAAG;oBAC5E,oBAAC,gBAAgB,IAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,GAAG;oBAClF,oBAAC,GAAG,IAAC,EAAE,EAAE,CAAC;wBACR,oBAAC,UAAU;4BACT,oBAAC,IAAI,IAAC,EAAE,EAAE,SAAS,IAAG,CAAC,CAAC,QAAQ,CAAC,CAAQ,CAC9B;wBACb,gCAAQ,IAAI,EAAC,QAAQ,IAAE,CAAC,CAAC,MAAM,CAAC,CAAU,CACtC,CACD,CACR,CAAA;YACH,CAAC,GACD,CACH,CAAA;IACH,CAAC;IACH,eAAC;AAAD,CAAC,AA5BD,CAAuB,KAAK,CAAC,SAAS,GA4BrC;AAED,eAAe,cAAc,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAA","sourcesContent":["import {Form, Formik, FormikProps} from 'formik'\nimport i18next from 'i18next'\nimport {Box} from 'indoqa-react-fela'\nimport * as React from 'react'\nimport {WithNamespaces, withNamespaces} from 'react-i18next'\nimport {Link} from 'react-router-dom'\nimport * as Yup from 'yup'\nimport ButtonLink from '../../commons/components/atoms/ButtonLink'\nimport FormRow from '../../commons/components/molecules/FormRow'\nimport {User} from '../store/forms.types'\n\nimport AddressesSubForm from './AddressesSubForm'\n\nconst validationSchema = (t: i18next.TranslationFunction) =>\n  Yup.object().shape({\n    name: Yup.string().required(),\n    email: Yup.string().required(t('errorMissingEmail')),\n    addresses: Yup.array().of(Yup.object().shape({\n      country: Yup.string().required(),\n      zipCode: Yup.string().required(),\n    })),\n  })\n\nexport interface Props extends WithNamespaces {\n  user: User,\n  cancelUrl: string,\n  saveUser: (user: User, setErrors: any) => void\n}\n\nclass UserForm extends React.Component<Props> {\n\n  public render() {\n    const {user, cancelUrl, saveUser, t} = this.props\n    return (\n      <Formik\n        key={user.id + user.lastModified.toString()}\n        onSubmit={(values, {setErrors}) => saveUser(values, setErrors)}\n        initialValues={user}\n        validationSchema={validationSchema(t)}\n        render={({values, errors, touched}: FormikProps<User>) => {\n          return (\n            <Form>\n              <FormRow name=\"name\" label={t('name')} errors={errors} touched={touched}/>\n              <FormRow name=\"email\" label={t('email')} errors={errors} touched={touched}/>\n              <AddressesSubForm addresses={values.addresses} errors={errors} touched={touched}/>\n              <Box mt={2}>\n                <ButtonLink>\n                  <Link to={cancelUrl}>{t('cancel')}</Link>\n                </ButtonLink>\n                <button type=\"submit\">{t('save')}</button>\n              </Box>\n            </Form>\n          )\n        }}\n      />\n    )\n  }\n}\n\nexport default withNamespaces('forms')(UserForm)\n"]}]}