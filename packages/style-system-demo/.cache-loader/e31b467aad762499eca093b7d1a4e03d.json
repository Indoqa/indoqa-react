{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/style-guide/sgtheme/withSGTheme.tsx","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/style-guide/sgtheme/withSGTheme.tsx","mtime":1549207277724},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport StyleGuideThemeContext from './SGThemeContext';\nexport function withSGTheme(Component) {\n    return function BoundComponent(props) {\n        return (React.createElement(StyleGuideThemeContext.Consumer, null, function (value) { return React.createElement(Component, tslib_1.__assign({ sgTheme: value }, props)); }));\n    };\n}\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/style-guide/sgtheme/withSGTheme.tsx","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/style-guide/sgtheme/withSGTheme.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,sBAAsB,MAAM,kBAAkB,CAAA;AAMrD,MAAM,UAAU,WAAW,CACzB,SAAgD;IAEhD,OAAO,SAAS,cAAc,CAAC,KAAQ;QACrC,OAAO,CACL,oBAAC,sBAAsB,CAAC,QAAQ,QAC7B,UAAC,KAAK,IAAK,OAAA,oBAAC,SAAS,qBAAC,OAAO,EAAE,KAAK,IAAO,KAAa,EAAI,EAAjD,CAAiD,CAC7B,CACnC,CAAA;IACH,CAAC,CAAA;AACH,CAAC","sourcesContent":["import * as React from 'react'\nimport {SGTheme} from './SGTheme'\nimport StyleGuideThemeContext from './SGThemeContext'\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\nexport interface WithSGTheme {sgTheme: SGTheme}\n\n// see https://github.com/Microsoft/TypeScript/issues/28748\nexport function withSGTheme<P extends WithSGTheme, R = Omit<P, 'sgTheme'>>(\n  Component: React.ComponentClass<P> | React.FC<P>,\n): React.FC<R> {\n  return function BoundComponent(props: R) {\n    return (\n      <StyleGuideThemeContext.Consumer>\n        {(value) => <Component sgTheme={value} {...(props as any)} />}\n      </StyleGuideThemeContext.Consumer>\n    )\n  }\n}\n"]}]}