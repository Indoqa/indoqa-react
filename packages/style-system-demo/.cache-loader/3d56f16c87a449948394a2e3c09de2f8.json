{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/_forms/store/forms.epics.ts","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/_forms/store/forms.epics.ts","mtime":1549207277724},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react-fela/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["import { ofType } from 'redux-observable';\nimport { of } from 'rxjs/internal/observable/of';\nimport { mergeMap } from 'rxjs/operators';\nimport shortid from 'shortid';\nimport { saveUserError, saveUserSuccess } from './forms.actions';\nimport { FormsActionKeys } from './forms.types';\nvar doSaveForm = function (action, history) {\n    var user = action.user, setErrors = action.setErrors;\n    if (user.name.startsWith('G')) {\n        setErrors({ name: 'Names starting with \\'G\\' are not allowed.' });\n        return of(saveUserError());\n    }\n    history.push('/forms/users/');\n    if (user.id === '') {\n        user.id = shortid();\n    }\n    return of(saveUserSuccess(user));\n};\nvar fetchWordsEpic$ = function (action$, state, _a) {\n    var history = _a.history;\n    return action$.pipe(ofType(FormsActionKeys.SAVE_USER), mergeMap(function (action) { return doSaveForm(action, history); }));\n};\nexport default [fetchWordsEpic$];\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/_forms/store/forms.epics.ts","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react-fela/packages/demo/src/main/_forms/store/forms.epics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,MAAM,EAAC,MAAM,kBAAkB,CAAA;AAE7C,OAAO,EAAC,EAAE,EAAC,MAAM,6BAA6B,CAAA;AAC9C,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AACvC,OAAO,OAAO,MAAM,SAAS,CAAA;AAG7B,OAAO,EAAW,aAAa,EAAE,eAAe,EAAC,MAAM,iBAAiB,CAAA;AACxE,OAAO,EAAc,eAAe,EAAC,MAAM,eAAe,CAAA;AAI1D,IAAM,UAAU,GAAG,UAAC,MAAgB,EAAE,OAAY;IACzC,IAAA,kBAAI,EAAE,4BAAS,CAAU;IAGhC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAE7B,SAAS,CAAC,EAAC,IAAI,EAAE,4CAA4C,EAAC,CAAC,CAAA;QAC/D,OAAO,EAAE,CAAC,aAAa,EAAE,CAAC,CAAA;KAC3B;IAGD,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IAG7B,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;QAClB,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,CAAA;KACpB;IAED,OAAO,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAA;AAClC,CAAC,CAAA;AAED,IAAM,eAAe,GAAc,UAAC,OAAO,EAAE,KAAK,EAAE,EAAS;QAAR,oBAAO;IAC1D,OAAA,OAAO,CAAC,IAAI,CACV,MAAM,CAAW,eAAe,CAAC,SAAS,CAAC,EAC3C,QAAQ,CAAC,UAAC,MAAM,IAAK,OAAA,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,EAA3B,CAA2B,CAAC,CAClD;AAHD,CAGC,CAAA;AAEH,eAAe,CAAC,eAAe,CAAC,CAAA","sourcesContent":["import {Epic, ofType} from 'redux-observable'\nimport {Observable} from 'rxjs/internal/Observable'\nimport {of} from 'rxjs/internal/observable/of'\nimport {mergeMap} from 'rxjs/operators'\nimport shortid from 'shortid'\n\nimport Types from 'Types'\nimport {SaveUser, saveUserError, saveUserSuccess} from './forms.actions'\nimport {FormsAction, FormsActionKeys} from './forms.types'\n\ninterface FormsEpic extends Epic<Types.RootAction, FormsAction, Types.RootState, Types.Services> {}\n\nconst doSaveForm = (action: SaveUser, history: any): Observable<FormsAction> => {\n  const {user, setErrors} = action\n\n  // simulate a server-side validation\n  if (user.name.startsWith('G')) {\n    // store the validation error into the form\n    setErrors({name: 'Names starting with \\'G\\' are not allowed.'})\n    return of(saveUserError())\n  }\n\n  // go back to users lists\n  history.push('/forms/users/')\n\n  // its a new user -> create an id\n  if (user.id === '') {\n    user.id = shortid()\n  }\n\n  return of(saveUserSuccess(user))\n}\n\nconst fetchWordsEpic$: FormsEpic = (action$, state, {history}) =>\n  action$.pipe(\n    ofType<SaveUser>(FormsActionKeys.SAVE_USER),\n    mergeMap((action) => doSaveForm(action, history)),\n  )\n\nexport default [fetchWordsEpic$]\n"]}]}