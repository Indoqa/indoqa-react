{"remainingRequest":"/home/rpoetz/Development/indoqa/indoqa-react/node_modules/ts-loader/index.js??ref--4-oneOf-2-1!/home/rpoetz/Development/indoqa/indoqa-react/packages/style-system/src/main/theming/baseTheme.ts","dependencies":[{"path":"/home/rpoetz/Development/indoqa/indoqa-react/packages/style-system/src/main/theming/baseTheme.ts","mtime":1549803032960},{"path":"/home/rpoetz/Development/indoqa/indoqa-react/node_modules/cache-loader/dist/cjs.js","mtime":1547145562332},{"path":"/home/rpoetz/Development/indoqa/indoqa-react/node_modules/ts-loader/index.js","mtime":1547145562587}],"contextDependencies":[],"result":["var typeScaleFactor = 1.333;\nvar typeScaleBase = 14;\nvar standardFont = 'sans-serif';\nexport var typeScale = function (level) { return typeScaleBase + (typeScaleFactor * level); };\nexport var baseTheme = {\n    fontSizes: {\n        text: typeScale(0),\n        big: typeScale(1),\n        veryBig: typeScale(2),\n        small: typeScale(-1),\n        verySmall: typeScale(-2),\n    },\n    fonts: {\n        text: standardFont,\n    },\n    colors: {\n        text: '#000000',\n    },\n    spacing: {\n        space0: 0,\n        space1: '0.5rem',\n        space2: '1rem',\n        space3: '2rem',\n        space4: '4rem',\n    },\n    layout: {},\n};\n",{"version":3,"file":"/home/rpoetz/Development/indoqa/indoqa-react/packages/style-system/src/main/theming/baseTheme.ts","sourceRoot":"","sources":["/home/rpoetz/Development/indoqa/indoqa-react/packages/style-system/src/main/theming/baseTheme.ts"],"names":[],"mappings":"AAAA,IAAM,eAAe,GAAG,KAAK,CAAA;AAC7B,IAAM,aAAa,GAAG,EAAE,CAAA;AACxB,IAAM,YAAY,GAAG,YAAY,CAAA;AACjC,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,KAAa,IAAK,OAAA,aAAa,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,EAAzC,CAAyC,CAAA;AAkCrF,MAAM,CAAC,IAAM,SAAS,GAAc;IAClC,SAAS,EAAE;QACT,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;QAClB,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;QACjB,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QACrB,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,YAAY;KACnB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,SAAS;KAChB;IACD,OAAO,EAAE;QACP,MAAM,EAAE,CAAC;QACT,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,MAAM;KACf;IACD,MAAM,EAAE,EAAE;CACX,CAAA","sourcesContent":["const typeScaleFactor = 1.333\nconst typeScaleBase = 14\nconst standardFont = 'sans-serif'\nexport const typeScale = (level: number) => typeScaleBase + (typeScaleFactor * level)\n\nexport declare interface BaseFontSizes {\n  readonly verySmall: number | string,\n  readonly small: number | string,\n  readonly text: number | string,\n  readonly big: number | string,\n  readonly veryBig: number | string,\n}\n\nexport declare interface BaseFonts {\n  readonly text: string,\n}\n\nexport declare interface BaseColors {\n  readonly text: string,\n}\n\nexport declare interface BaseSpacing {\n  readonly space0: number | string,\n  readonly space1: number | string,\n  readonly space2: number | string,\n  readonly space3: number | string,\n  readonly space4: number | string,\n}\n\nexport declare interface BaseTheme {\n  readonly fontSizes: Partial<BaseFontSizes>,\n  readonly fonts: Partial<BaseFonts>,\n  readonly colors: Partial<BaseColors>,\n  readonly spacing: Partial<BaseSpacing>,\n  readonly layout: {},\n}\n\nexport const baseTheme: BaseTheme = {\n  fontSizes: {\n    text: typeScale(0),\n    big: typeScale(1),\n    veryBig: typeScale(2),\n    small: typeScale(-1),\n    verySmall: typeScale(-2),\n  },\n  fonts: {\n    text: standardFont,\n  },\n  colors: {\n    text: '#000000',\n  },\n  spacing: {\n    space0: 0,\n    space1: '0.5rem',\n    space2: '1rem',\n    space3: '2rem',\n    space4: '4rem',\n  },\n  layout: {},\n}\n"]}]}